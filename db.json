{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/ReduxFlow.png","path":"img/ReduxFlow.png","modified":1,"renderable":0},{"_id":"themes/huno/source/css/animate.css","path":"css/animate.css","modified":1,"renderable":1},{"_id":"themes/huno/source/css/archive.css","path":"css/archive.css","modified":1,"renderable":1},{"_id":"themes/huno/source/css/china-social-icon.css","path":"css/china-social-icon.css","modified":1,"renderable":1},{"_id":"themes/huno/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/huno/source/css/uno.css","path":"css/uno.css","modified":1,"renderable":1},{"_id":"themes/huno/source/images/totop.png","path":"images/totop.png","modified":1,"renderable":1},{"_id":"themes/huno/source/js/awesome-toc.min.js","path":"js/awesome-toc.min.js","modified":1,"renderable":1},{"_id":"themes/huno/source/js/jquery.githubRepoWidget.min.js","path":"js/jquery.githubRepoWidget.min.js","modified":1,"renderable":1},{"_id":"themes/huno/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/huno/source/js/scale.fix.js","path":"js/scale.fix.js","modified":1,"renderable":1},{"_id":"themes/huno/source/images/yqb1.png","path":"images/yqb1.png","modified":1,"renderable":1},{"_id":"themes/huno/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/china-social.eot","path":"fonts/china-social/china-social.eot","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/china-social.svg","path":"fonts/china-social/china-social.svg","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/china-social.ttf","path":"fonts/china-social/china-social.ttf","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/china-social.woff","path":"fonts/china-social/china-social.woff","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/china-social/readme.html","path":"fonts/china-social/readme.html","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.css","path":"fonts/foundation-icons/foundation-icons.css","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.eot","path":"fonts/foundation-icons/foundation-icons.eot","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.ttf","path":"fonts/foundation-icons/foundation-icons.ttf","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.woff","path":"fonts/foundation-icons/foundation-icons.woff","modified":1,"renderable":1},{"_id":"themes/huno/source/images/yqb.jpg","path":"images/yqb.jpg","modified":1,"renderable":1},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.svg","path":"fonts/foundation-icons/foundation-icons.svg","modified":1,"renderable":1},{"_id":"themes/huno/source/images/background-cover.jpg","path":"images/background-cover.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"df45272f02a327e3de58ea9487ece7a6cadd8cce","modified":1502863193000},{"_id":"themes/huno/README.en.md","hash":"e158c81aaf8e47e33a1b7a4806a56c8a0bb9336d","modified":1501236636000},{"_id":"themes/huno/README.md","hash":"e1cec49f26585ce6f3734866f533dea0b011e74b","modified":1501236636000},{"_id":"themes/huno/_config.yml","hash":"c353ae5376560a715f4017989a626f4f110ceaf3","modified":1502944800000},{"_id":"source/_posts/README.md","hash":"bfbdeee5187648d4e06394aadc4eb51b14914601","modified":1502773667000},{"_id":"source/_posts/background.md","hash":"9fc2e9f164711b949c7a071ee48a5be8589bafac","modified":1501240302000},{"_id":"source/_posts/code-guide.md","hash":"420d0da1096ff69ecad88788f1cb1da2e2e77776","modified":1502939875000},{"_id":"source/_posts/redux.md","hash":"391ac31a8416f72b8065cfbc5d4687e319a8a927","modified":1501240254000},{"_id":"source/_posts/schedule.md","hash":"7454d642f069772f868620df41bd8ff7cf26dc65","modified":1501240286000},{"_id":"source/about/index.md","hash":"d29deeccb6edb7366d2d1cec3eb6e283b15ffff5","modified":1501236636000},{"_id":"source/archive/index.md","hash":"d5ce0161f343cf570bd6cbeaa68ef7832544eb1c","modified":1501236636000},{"_id":"source/codeReview/index.md","hash":"eee7ea03b28a9e002babc7b1d01a34ba55584d6b","modified":1501238272000},{"_id":"themes/huno/languages/default.yml","hash":"3d86cfbc7776825cc420f37993ad8dbe3ea4de2b","modified":1501236636000},{"_id":"themes/huno/languages/zh-CN.yml","hash":"5a6a89dfa6d180c2a35d15bc300646813ce11dbe","modified":1501236636000},{"_id":"themes/huno/languages/zh-TW.yml","hash":"d865666c14c58c70738d9aef04ae14e38e750c14","modified":1501236636000},{"_id":"themes/huno/layout/archive.ejs","hash":"23aff325ab97b2c7dde6e757fa3add5226a88b4f","modified":1501236636000},{"_id":"themes/huno/layout/category.ejs","hash":"2b412d1b52b9da8ad19f6a66b1c18ab0b7546214","modified":1501236636000},{"_id":"themes/huno/layout/index.ejs","hash":"12c817a875f353c03d8795c2a7b653e4da22c17e","modified":1501236636000},{"_id":"themes/huno/layout/layout.ejs","hash":"7f5aeec1e2d59fcbb0f2e9ac76e112ab81611aca","modified":1501236636000},{"_id":"themes/huno/layout/page-archive.ejs","hash":"dff0b830818122e5b711065d319de1ccb8a7052e","modified":1501236636000},{"_id":"themes/huno/layout/page-codeReview.ejs","hash":"bfc8f66c71737a846a5d3b492f80cece52bbe523","modified":1502949481000},{"_id":"themes/huno/layout/page.ejs","hash":"70a50ecf7e1aa9c658212f1e77783dcb287d56a6","modified":1501236636000},{"_id":"themes/huno/layout/post.ejs","hash":"86c9d13e8abdcff4d368e34595e2d2f11f37e9d4","modified":1501236636000},{"_id":"themes/huno/layout/tag.ejs","hash":"fefa03bed577cae2e1aac19bd5d30c5034f453a0","modified":1501236636000},{"_id":"source/img/ReduxFlow.png","hash":"a3c62d2d79510ce6216de272d10db1f2b959da32","modified":1501236636000},{"_id":"themes/huno/cs-icon.png","hash":"4ba5bfbacb1a533f3561112406c305e9510aa8dd","modified":1501236636000},{"_id":"themes/huno/layout/_partials/list-posts.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501236636000},{"_id":"themes/huno/layout/_scripts/site-analytics.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501236636000},{"_id":"themes/huno/layout/_partials/archive.ejs","hash":"cd8aa2680fc9b3ae8d28ff591b351cdacc2eb0a5","modified":1501236636000},{"_id":"themes/huno/layout/_partials/article.ejs","hash":"1d9acce25292abb305ac4062416323039c348127","modified":1501236636000},{"_id":"themes/huno/layout/_partials/comment.ejs","hash":"4e5ef0b65c99cc325d937eec3117adb95c537b06","modified":1501236636000},{"_id":"themes/huno/layout/_partials/disqus.ejs","hash":"ba2c2ca10af70b303b2f2b850c90afc92e75b1d2","modified":1501236636000},{"_id":"themes/huno/layout/_partials/duoshuo.ejs","hash":"d9ddd16bc462c4fd6462ca39367e9202d0b11700","modified":1501236636000},{"_id":"themes/huno/layout/_partials/footer.ejs","hash":"736a7ff44f02bfbfa2fb7acdd3ca34a723c9d9dd","modified":1501240397000},{"_id":"themes/huno/layout/_partials/pagination.ejs","hash":"14c8543d00435ebac43925f45d8916d2f3beb4ef","modified":1501236636000},{"_id":"themes/huno/layout/_partials/side-panel.ejs","hash":"fb922e28e0efc9e5d9dc3266c91b9346384dea3f","modified":1501236636000},{"_id":"themes/huno/layout/_partials/social.ejs","hash":"6f250bed6acb8a3e84670571e0a772e7557c02bc","modified":1501236636000},{"_id":"themes/huno/layout/_scripts/awesome-toc.ejs","hash":"9f0b10d47c46d31a6e5251fa0ea017e9c07183d4","modified":1501236636000},{"_id":"themes/huno/layout/_scripts/github-repo-widget.ejs","hash":"468220dee872b4d92d621943fa12be2b470d9c28","modified":1501236636000},{"_id":"themes/huno/layout/_scripts/killie6.ejs","hash":"a9d70aad812a73416c3b4672cc646fa093984028","modified":1501236636000},{"_id":"themes/huno/layout/_scripts/mathjax.ejs","hash":"ea2c1fada9794a0a21c13e603fc4b34ebe92a23b","modified":1501236636000},{"_id":"themes/huno/source/css/animate.css","hash":"a2f854fbdc52a5657dd5e2b95cc96c0da32f3ea2","modified":1501236636000},{"_id":"themes/huno/source/css/archive.css","hash":"88005d441d52e143cd2ab4da53b1ec50e22f9ade","modified":1501236636000},{"_id":"themes/huno/source/css/china-social-icon.css","hash":"2f90442f6d0d289e49c07a85c2dae32cab8b2063","modified":1501236636000},{"_id":"themes/huno/source/css/highlight.styl","hash":"92eabbf94e7a06e968c356bedf4adb04700f1c2e","modified":1501236636000},{"_id":"themes/huno/source/css/uno.css","hash":"3c18c0b5b91ef50da2b2f319bcf2d9194b669f1b","modified":1502949229000},{"_id":"themes/huno/source/images/totop.png","hash":"4f6cb11941e5a72b03cb00cf9d9d55671b4310eb","modified":1501236636000},{"_id":"themes/huno/source/js/awesome-toc.min.js","hash":"b4d0f2a33f8340eb2543e8b2cee0dfd745cfb54a","modified":1501236636000},{"_id":"themes/huno/source/js/jquery.githubRepoWidget.min.js","hash":"94a141fa474ec5022f7c397b4fd3ff92405ab755","modified":1501236636000},{"_id":"themes/huno/source/js/main.js","hash":"bafb068e72c56db9e66ac148512b1b21cf5547e1","modified":1501236636000},{"_id":"themes/huno/source/js/scale.fix.js","hash":"bbf62458c63fca2535965f9dfaacfbc6bc697e03","modified":1501236636000},{"_id":"themes/huno/source/images/yqb1.png","hash":"2fd0d48e05c24d555cd1713010b0193448db5cab","modified":1501236636000},{"_id":"themes/huno/source/js/jquery.min.js","hash":"06e872300088b9ba8a08427d28ed0efcdf9c6ff5","modified":1501236636000},{"_id":"source/_posts/codeReview/.git/COMMIT_EDITMSG","hash":"cce3893f1e98ebb175cc57614c8da921e90b043a","modified":1502767673000},{"_id":"source/_posts/codeReview/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1502767167000},{"_id":"source/_posts/codeReview/.git/config","hash":"032a2684bb4f767080b94edb07ed7469813b8325","modified":1502767167000},{"_id":"source/_posts/codeReview/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/index","hash":"51245da8cd4bbe21b9eb9ea062ad4f1d8818b1b0","modified":1502767673000},{"_id":"source/_posts/codeReview/.git/packed-refs","hash":"c892324f3311813649c4f0c3f24b5100516da8cf","modified":1502767167000},{"_id":"source/_posts/codeReview/.idea/jsLibraryMappings.xml","hash":"3057cb9aa5f72d93b27b0fa4e16d257b6115d28e","modified":1502767167000},{"_id":"source/_posts/codeReview/.idea/vcs.xml","hash":"c92f3eb0ad1c70371e177a4d7d741f90af3f902c","modified":1502767167000},{"_id":"themes/huno/source/fonts/china-social/china-social.eot","hash":"a43a5c3d66f0d38639a595ebd02857e152ada475","modified":1501236636000},{"_id":"themes/huno/source/fonts/china-social/china-social.svg","hash":"4bad780e6a31f4fa9fef037a3d9ecb8623042a6e","modified":1501236636000},{"_id":"themes/huno/source/fonts/china-social/china-social.ttf","hash":"2f94360528097df7dcfb39baf8df5393a0d47ca3","modified":1501236636000},{"_id":"themes/huno/source/fonts/china-social/china-social.woff","hash":"74c0ac5268cf7ffe270faaf7c960b74d483d2df1","modified":1501236636000},{"_id":"themes/huno/source/fonts/foundation-icons/.fontcustom-data","hash":"ea6c3635d3c1d61c8972e4ff256de9ecef387878","modified":1501236636000},{"_id":"themes/huno/source/fonts/china-social/readme.html","hash":"ca335751de11d6ef7721dc907571de39cef6e361","modified":1501236636000},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.css","hash":"2ad3bb2b4b7d1d67b4d40a9672193638c168c12a","modified":1501236636000},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.eot","hash":"d584172686583fd510d8f04cf21e6e77fce51435","modified":1501236636000},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.ttf","hash":"4b2bce6c792493a4a5716b6fec2dbefe89492c3f","modified":1501236636000},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.woff","hash":"112fb0e498037f2fea036adb8105e47638159eaa","modified":1501236636000},{"_id":"themes/huno/source/images/yqb.jpg","hash":"7ad5a005f5e8db730d18c193a9540483f3adddec","modified":1501236636000},{"_id":"source/_posts/codeReview/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1502767161000},{"_id":"source/_posts/codeReview/.git/logs/HEAD","hash":"9700f9c94cb9d85982f71d2591a0bd6cd402620e","modified":1502767673000},{"_id":"source/_posts/codeReview/.idea/dictionaries/admin.xml","hash":"7130efaf6b20c6c2e5003795655cd7f256102040","modified":1502767167000},{"_id":"source/_posts/codeReview/.idea/dictionaries/xcs.xml","hash":"9d16788e710e5b576088f40304380f4c71c44c76","modified":1502767167000},{"_id":"source/_posts/codeReview/guide/2017-6/2017-6-27.md","hash":"17841bb35aa1ddc39e3b531e35b04ac8977fb4be","modified":1502767456000},{"_id":"source/_posts/codeReview/guide/2017-7/2017-7-5.md","hash":"5626c9802143d0f73c92073b81b39c4de04c0452","modified":1502767470000},{"_id":"themes/huno/source/fonts/foundation-icons/foundation-icons.svg","hash":"5cf9f3975e71956e2ab533107fe9eef262197578","modified":1501236636000},{"_id":"source/_posts/codeReview/.git/objects/40/ca77f1b9424e7d021b8cdc46fe44e7a75ade92","hash":"bbbcfb0d14601b5e30e9903dc413c6741746571b","modified":1502767660000},{"_id":"source/_posts/codeReview/.git/objects/5e/44839853b5b316573a5b5b348efec8301c6557","hash":"b2f437ccfec173be3bfea9df4e2e1440ff33b3fd","modified":1502767673000},{"_id":"source/_posts/codeReview/.git/objects/45/7d3383b03a4a01de62a1bbd2d4712e1a30d7cd","hash":"0783662337a77748033e7147333efcc93cd533f0","modified":1502767673000},{"_id":"source/_posts/codeReview/.git/objects/8b/907f1778452809cf9901429453e37ca303706b","hash":"3414e83c0860ebd9a73a9ab7cde0ddf0c932c28b","modified":1502767673000},{"_id":"source/_posts/codeReview/.git/objects/d0/d1138ba0e3902c7717fbc0f14323a95b721917","hash":"b3823766e5efe32f31a14ffdba998f7fe2791802","modified":1502767673000},{"_id":"source/_posts/codeReview/.git/objects/e8/0b23b416a6fe7dd0a8c4cad81bde8aad17b8a5","hash":"a79856aecf73a0536eb35a01c8d8ac967ba838a1","modified":1502767660000},{"_id":"source/_posts/codeReview/.git/objects/d3/a45af02076a8a92208052549ce92878e9c7bce","hash":"c019cb7b957ea90d5c6e0659e83bef31a7e9656b","modified":1502767673000},{"_id":"source/_posts/codeReview/.git/objects/pack/pack-7a843b86b37af2837aec20ef821cffe69146c8f2.idx","hash":"921c2f3e73b0d2158eabe68878fd97b5e857a323","modified":1502767167000},{"_id":"source/_posts/codeReview/.git/objects/pack/pack-7a843b86b37af2837aec20ef821cffe69146c8f2.pack","hash":"b5d0551faffd57a09faef2a625b67024b21113d7","modified":1502767167000},{"_id":"source/_posts/codeReview/.git/refs/heads/master","hash":"4cf6458609b4fdda867d301c3d67ca1648a4d2c4","modified":1502767673000},{"_id":"source/_posts/codeReview/.git/logs/refs/heads/master","hash":"9700f9c94cb9d85982f71d2591a0bd6cd402620e","modified":1502767673000},{"_id":"source/_posts/codeReview/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1502767167000},{"_id":"source/_posts/codeReview/.git/refs/remotes/origin/master","hash":"4cf6458609b4fdda867d301c3d67ca1648a4d2c4","modified":1502768003000},{"_id":"source/_posts/codeReview/.git/logs/refs/remotes/origin/HEAD","hash":"b5a681c1c7f05681ff1a07e3c954ddec2b4ac835","modified":1502767167000},{"_id":"source/_posts/codeReview/.git/logs/refs/remotes/origin/master","hash":"f2ac68e7a8bda59e3ee579987d0c10fd9a339dfd","modified":1502768003000},{"_id":"themes/huno/source/images/background-cover.jpg","hash":"08162d5ddd6c081f2713bfd10261e62f0752a600","modified":1501236636000},{"_id":"themes/huno/demo.gif","hash":"cf6121b4aa0f3b07a2f919099942d97206202aa8","modified":1501236636000},{"_id":"public/content.json","hash":"6227e4e9f347596f7290c3c2b83d3e166ac6c010","modified":1502952767301},{"_id":"public/about/index.html","hash":"657ce8f55627b06d57f888bf96c674b743c19e55","modified":1502952767464},{"_id":"public/archive/index.html","hash":"7489d8a003399959b1e868230625adf855fa4fd2","modified":1502952767464},{"_id":"public/codeReview/index.html","hash":"fcd18cf18c2781b783792e9c48fe777a88f7c02c","modified":1502952767464},{"_id":"public/codeReview/code-guide/index.html","hash":"25065dce34294f62b9acb68a54d7d9ead23ae046","modified":1502952767464},{"_id":"public/uncategorized/README/index.html","hash":"2a151fc9a5877d19e117f7b6593eea5f0dcf9d7b","modified":1502952767464},{"_id":"public/codeReview/codeReview/guide/2017-7/2017-7-5/index.html","hash":"1d7cafaf6c01c8f7f101b61503ea68ad7ee0768d","modified":1502952767464},{"_id":"public/codeReview/codeReview/guide/2017-6/2017-6-27/index.html","hash":"37a9091f17a5b335cc385ca78e3129acf6887220","modified":1502952767464},{"_id":"public/other/background/index.html","hash":"da1b655ede51f448fc3aef97e04df03bb67b6b6c","modified":1502952767464},{"_id":"public/node/schedule/index.html","hash":"06a9b2381971df09d4f634eea82e6b3ccbfb9837","modified":1502952767464},{"_id":"public/archives/index.html","hash":"041703ce57b0f129b823c116838a0c2e963d185d","modified":1502952767464},{"_id":"public/archives/2017/index.html","hash":"c229b2acfdd880997a45d5c27055469decb3350e","modified":1502952767464},{"_id":"public/archives/2017/03/index.html","hash":"2bcb0e5a20c2d8a8ee1ac4694775fba39c04c285","modified":1502952767464},{"_id":"public/archives/2017/06/index.html","hash":"ce4af30d1c0611575b71684c8236304d2ee80cfc","modified":1502952767464},{"_id":"public/archives/2017/07/index.html","hash":"9b2967b89339ad5339a1c431012ec140f954a869","modified":1502952767464},{"_id":"public/archives/2017/08/index.html","hash":"90c474c9e315d43df6a85a57d01aa5dafbc83f2b","modified":1502952767464},{"_id":"public/categories/other/index.html","hash":"68d49e05840db8812d4928441d4941508f6d7c94","modified":1502952767464},{"_id":"public/categories/codeReview/index.html","hash":"c53dca85a24f9676879d4a98699928a2e0a2b571","modified":1502952767464},{"_id":"public/categories/react/index.html","hash":"3275f3aca41c6528071563b75abf3d6cadfe4974","modified":1502952767464},{"_id":"public/categories/node/index.html","hash":"edfd951873c86acae155d18cd8847e149a1d84ee","modified":1502952767465},{"_id":"public/index.html","hash":"b85482b2e160c0dd8a2fd6059068be567255754f","modified":1502952767465},{"_id":"public/tags/RN技术/index.html","hash":"cf23df6ad6869e6ecb26001bb5b44026413b2994","modified":1502952767465},{"_id":"public/tags/react框架/index.html","hash":"ad517e350756ba428f34b418e266a31d7c07a856","modified":1502952767465},{"_id":"public/tags/node技术/index.html","hash":"a0c415c9e22e3dc9fad6d2798f9190d254745b20","modified":1502952767465},{"_id":"public/react/redux/index.html","hash":"8426ec36ba93eab9045628eba0fa2489c3ad996a","modified":1502952767465},{"_id":"public/images/totop.png","hash":"4f6cb11941e5a72b03cb00cf9d9d55671b4310eb","modified":1502952767470},{"_id":"public/fonts/china-social/china-social.eot","hash":"a43a5c3d66f0d38639a595ebd02857e152ada475","modified":1502952767470},{"_id":"public/fonts/china-social/china-social.svg","hash":"4bad780e6a31f4fa9fef037a3d9ecb8623042a6e","modified":1502952767470},{"_id":"public/fonts/china-social/china-social.ttf","hash":"2f94360528097df7dcfb39baf8df5393a0d47ca3","modified":1502952767470},{"_id":"public/fonts/china-social/china-social.woff","hash":"74c0ac5268cf7ffe270faaf7c960b74d483d2df1","modified":1502952767470},{"_id":"public/fonts/foundation-icons/foundation-icons.eot","hash":"d584172686583fd510d8f04cf21e6e77fce51435","modified":1502952767470},{"_id":"public/fonts/foundation-icons/foundation-icons.ttf","hash":"4b2bce6c792493a4a5716b6fec2dbefe89492c3f","modified":1502952767470},{"_id":"public/fonts/foundation-icons/foundation-icons.woff","hash":"112fb0e498037f2fea036adb8105e47638159eaa","modified":1502952767470},{"_id":"public/img/ReduxFlow.png","hash":"a3c62d2d79510ce6216de272d10db1f2b959da32","modified":1502952767666},{"_id":"public/images/yqb1.png","hash":"2fd0d48e05c24d555cd1713010b0193448db5cab","modified":1502952767667},{"_id":"public/css/archive.css","hash":"88005d441d52e143cd2ab4da53b1ec50e22f9ade","modified":1502952767675},{"_id":"public/css/china-social-icon.css","hash":"2f90442f6d0d289e49c07a85c2dae32cab8b2063","modified":1502952767675},{"_id":"public/css/highlight.css","hash":"701da6788bee02c165236174b6767ae06957f051","modified":1502952767675},{"_id":"public/js/awesome-toc.min.js","hash":"b4d0f2a33f8340eb2543e8b2cee0dfd745cfb54a","modified":1502952767675},{"_id":"public/js/jquery.githubRepoWidget.min.js","hash":"94a141fa474ec5022f7c397b4fd3ff92405ab755","modified":1502952767675},{"_id":"public/js/main.js","hash":"bafb068e72c56db9e66ac148512b1b21cf5547e1","modified":1502952767675},{"_id":"public/js/scale.fix.js","hash":"bbf62458c63fca2535965f9dfaacfbc6bc697e03","modified":1502952767675},{"_id":"public/fonts/china-social/readme.html","hash":"ca335751de11d6ef7721dc907571de39cef6e361","modified":1502952767675},{"_id":"public/css/animate.css","hash":"a2f854fbdc52a5657dd5e2b95cc96c0da32f3ea2","modified":1502952767675},{"_id":"public/css/uno.css","hash":"3c18c0b5b91ef50da2b2f319bcf2d9194b669f1b","modified":1502952767675},{"_id":"public/js/jquery.min.js","hash":"06e872300088b9ba8a08427d28ed0efcdf9c6ff5","modified":1502952767676},{"_id":"public/fonts/foundation-icons/foundation-icons.css","hash":"2ad3bb2b4b7d1d67b4d40a9672193638c168c12a","modified":1502952767676},{"_id":"public/images/yqb.jpg","hash":"7ad5a005f5e8db730d18c193a9540483f3adddec","modified":1502952767676},{"_id":"public/fonts/foundation-icons/foundation-icons.svg","hash":"5cf9f3975e71956e2ab533107fe9eef262197578","modified":1502952767676},{"_id":"public/images/background-cover.jpg","hash":"08162d5ddd6c081f2713bfd10261e62f0752a600","modified":1502952767690}],"Category":[{"name":"other","_id":"cj6g39sv70006y2r7vilc9r8q"},{"name":"codeReview","_id":"cj6g39svj000ay2r770b7e96h"},{"name":"react","_id":"cj6g39svk000dy2r7h3xjlu2m"},{"name":"node","_id":"cj6g39svm000hy2r7j5z970dr"}],"Data":[],"Page":[{"title":"关于我们","layout":"page-about","date":"2017-07-24T05:24:32.000Z","_content":"### 壹钱包前端团队\n\n前端的世界一直在变化着，在各种熟悉的语言进化中迅速的化学反应。也许你和我们一样，对前端的理解也在不断刷新。\n\n我们犹如一群站在互联网风口上的攻城狮，眼前的空间充满了未知，需要我们去开拓去开垦，需要我们逆风而上，不为别的，只为能在这虚拟与现实交错的世界里昂首飞翔！\n\n共同的理想和愿景把我们聚集到一起，为了一件件简单而又快乐的事情努力，我们深知手中的事情在改变世界，我们必须专业，必须严谨，必须乐于分享！\n\n** 无限未来等着你我，一起发现！**\n","source":"about/index.md","raw":"---\ntitle: 关于我们\nlayout: page-about\n\ndate: 2017-07-24 13:24:32\n---\n### 壹钱包前端团队\n\n前端的世界一直在变化着，在各种熟悉的语言进化中迅速的化学反应。也许你和我们一样，对前端的理解也在不断刷新。\n\n我们犹如一群站在互联网风口上的攻城狮，眼前的空间充满了未知，需要我们去开拓去开垦，需要我们逆风而上，不为别的，只为能在这虚拟与现实交错的世界里昂首飞翔！\n\n共同的理想和愿景把我们聚集到一起，为了一件件简单而又快乐的事情努力，我们深知手中的事情在改变世界，我们必须专业，必须严谨，必须乐于分享！\n\n** 无限未来等着你我，一起发现！**\n","updated":"2017-07-28T10:10:36.000Z","path":"about/index.html","comments":1,"_id":"cj6g39suq0001y2r75if5w23k","content":"<h3 id=\"壹钱包前端团队\"><a href=\"#壹钱包前端团队\" class=\"headerlink\" title=\"壹钱包前端团队\"></a>壹钱包前端团队</h3><p>前端的世界一直在变化着，在各种熟悉的语言进化中迅速的化学反应。也许你和我们一样，对前端的理解也在不断刷新。</p>\n<p>我们犹如一群站在互联网风口上的攻城狮，眼前的空间充满了未知，需要我们去开拓去开垦，需要我们逆风而上，不为别的，只为能在这虚拟与现实交错的世界里昂首飞翔！</p>\n<p>共同的理想和愿景把我们聚集到一起，为了一件件简单而又快乐的事情努力，我们深知手中的事情在改变世界，我们必须专业，必须严谨，必须乐于分享！</p>\n<p><strong> 无限未来等着你我，一起发现！</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"壹钱包前端团队\"><a href=\"#壹钱包前端团队\" class=\"headerlink\" title=\"壹钱包前端团队\"></a>壹钱包前端团队</h3><p>前端的世界一直在变化着，在各种熟悉的语言进化中迅速的化学反应。也许你和我们一样，对前端的理解也在不断刷新。</p>\n<p>我们犹如一群站在互联网风口上的攻城狮，眼前的空间充满了未知，需要我们去开拓去开垦，需要我们逆风而上，不为别的，只为能在这虚拟与现实交错的世界里昂首飞翔！</p>\n<p>共同的理想和愿景把我们聚集到一起，为了一件件简单而又快乐的事情努力，我们深知手中的事情在改变世界，我们必须专业，必须严谨，必须乐于分享！</p>\n<p><strong> 无限未来等着你我，一起发现！</strong></p>\n"},{"title":"归档","layout":"page-archive","date":"2017-07-25T01:40:59.000Z","_content":"","source":"archive/index.md","raw":"---\ntitle: 归档\nlayout: page-archive\ndate: 2017-07-25 09:40:59\n---\n","updated":"2017-07-28T10:10:36.000Z","path":"archive/index.html","comments":1,"_id":"cj6g39suy0003y2r73qn0zez5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"codeReview","layout":"page-codeReview","date":"2017-07-24T05:16:54.000Z","_content":"","source":"codeReview/index.md","raw":"---\ntitle: codeReview\nlayout: page-codeReview\ndate: 2017-07-24 13:16:54\n---\n","updated":"2017-07-28T10:37:52.000Z","path":"codeReview/index.html","comments":1,"_id":"cj6g39sv60005y2r73ebeocey","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"_content":"# 规范\n\n## codeReview\n\ncodeReview的文章，请在头部添加categories分类为codeReview，编译时会自动添加到codeReview文章列表\n\n> 目前categories只有codeReview，react，其他类型统一归类为other。如需新增分类，请联系管理员。\n> To Be Continued..\n","source":"_posts/README.md","raw":"# 规范\n\n## codeReview\n\ncodeReview的文章，请在头部添加categories分类为codeReview，编译时会自动添加到codeReview文章列表\n\n> 目前categories只有codeReview，react，其他类型统一归类为other。如需新增分类，请联系管理员。\n> To Be Continued..\n","slug":"README","published":1,"date":"2017-08-15T05:07:47.000Z","updated":"2017-08-15T05:07:47.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6g39suk0000y2r7g15lx285","content":"<h1 id=\"规范\"><a href=\"#规范\" class=\"headerlink\" title=\"规范\"></a>规范</h1><h2 id=\"codeReview\"><a href=\"#codeReview\" class=\"headerlink\" title=\"codeReview\"></a>codeReview</h2><p>codeReview的文章，请在头部添加categories分类为codeReview，编译时会自动添加到codeReview文章列表</p>\n<blockquote>\n<p>目前categories只有codeReview，react，其他类型统一归类为other。如需新增分类，请联系管理员。<br>To Be Continued..</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"规范\"><a href=\"#规范\" class=\"headerlink\" title=\"规范\"></a>规范</h1><h2 id=\"codeReview\"><a href=\"#codeReview\" class=\"headerlink\" title=\"codeReview\"></a>codeReview</h2><p>codeReview的文章，请在头部添加categories分类为codeReview，编译时会自动添加到codeReview文章列表</p>\n<blockquote>\n<p>目前categories只有codeReview，react，其他类型统一归类为other。如需新增分类，请联系管理员。<br>To Be Continued..</p>\n</blockquote>\n"},{"title":"回归技术教程，做系列分享","date":"2017-03-26T09:10:09.000Z","_content":"### 背景：\n今年我和很多同学谈17年KPI的时候，发现很多同学都在说同一件事，就是想学习，想团队有一个持续的分享会，想有一个大牛来指导他们去学习。所以能看出来，大家都渴望新知识，都想团队有个持续的分享会。\n\n### 现状：\n目前分享会形式主要是‘散养’，大家自主选课题，自己感兴趣的主题分享，这种形式的分享有两个很大的困难\n1. 不固定，不持久，想来一发就一发。\n2. 主题与大家不match\n主讲在上面说，下面的同学用很渴望的眼神认真的听着，但就是听不懂。我一般一次分享会做完后，我都用问过其中的一些同学，没对主讲课题做一些基础的准备的话，绝大多数人都是这种情况。所以这种形式的分享最佳收益者是主讲人，对于听众效果应该不是最好的。\n所以年初来，我一直在考虑解决这个问题，能给大家一个固定又持久，不管对主讲还是对听众都有收获的分享会。\n\n正因为有目前分享会有这种问题，而且我们团队人越来越多啦，我相信团队对于这种分享技术的氛围会越来越强烈。所以我一直在想以哪种分享形式来解决这些问题。目前我有一些想法，也跟佳敏做了讨论，他还是肯定提倡我这种做法。所以我觉得是时候跟大家说下，看看大家的反馈。\n\n新分享会新主题增加：** “回归技术教程，做系列分享”**\n\n### 形式：\n引入学校上课形式，会以17年团队技术KPI的三块：** react框架、RN技术、node技术 **找三本经典教程，去买PDF版本，分发给大家。分享会根据制定出一个课程表，以章节作为一个课时，每周一节课来分享三本教程中的每一章内容。量不大吧？这样只要大家提前去看，带着每章的问题来听课，内容上跟讲师也能match上，可能效果会更好些。\n\n### 分享时间：\n 以课程表为准\n\n### 老师：\n每条线都以目前这三个技术方向的几个主要负责人来作为主讲老师，持续系列分享。当然我更希望是在坐的每位同学，提前看教程，自主提出当老师。我觉得大家都是从0基础开始，每个人都有资格来当老师，哪怕当老师犯了错，下面有经验的学生也会纠正，对你本人收益也是最大的。所以我提倡这种自主行为，为此我会设立讲师奖励。\n\n### 奖励：\n计划每个季度，对前三名讲师给予买书补贴（具体费用如下）。\n```\n一次/一季度的前三名次数讲师: (80+100+120) * 4个季度 = 1200\n一次/一季度的 Happy Time: 250 * 4 = 1000 ```\n\n分享博客站点： 1. 分享会讲师内容  2. 大家工作上或学习中的体会\n\n","source":"_posts/background.md","raw":"---\ntitle: 回归技术教程，做系列分享\ndate: 2017-03-26 17:10:09\ntags:\ncategories:\n- other\n---\n### 背景：\n今年我和很多同学谈17年KPI的时候，发现很多同学都在说同一件事，就是想学习，想团队有一个持续的分享会，想有一个大牛来指导他们去学习。所以能看出来，大家都渴望新知识，都想团队有个持续的分享会。\n\n### 现状：\n目前分享会形式主要是‘散养’，大家自主选课题，自己感兴趣的主题分享，这种形式的分享有两个很大的困难\n1. 不固定，不持久，想来一发就一发。\n2. 主题与大家不match\n主讲在上面说，下面的同学用很渴望的眼神认真的听着，但就是听不懂。我一般一次分享会做完后，我都用问过其中的一些同学，没对主讲课题做一些基础的准备的话，绝大多数人都是这种情况。所以这种形式的分享最佳收益者是主讲人，对于听众效果应该不是最好的。\n所以年初来，我一直在考虑解决这个问题，能给大家一个固定又持久，不管对主讲还是对听众都有收获的分享会。\n\n正因为有目前分享会有这种问题，而且我们团队人越来越多啦，我相信团队对于这种分享技术的氛围会越来越强烈。所以我一直在想以哪种分享形式来解决这些问题。目前我有一些想法，也跟佳敏做了讨论，他还是肯定提倡我这种做法。所以我觉得是时候跟大家说下，看看大家的反馈。\n\n新分享会新主题增加：** “回归技术教程，做系列分享”**\n\n### 形式：\n引入学校上课形式，会以17年团队技术KPI的三块：** react框架、RN技术、node技术 **找三本经典教程，去买PDF版本，分发给大家。分享会根据制定出一个课程表，以章节作为一个课时，每周一节课来分享三本教程中的每一章内容。量不大吧？这样只要大家提前去看，带着每章的问题来听课，内容上跟讲师也能match上，可能效果会更好些。\n\n### 分享时间：\n 以课程表为准\n\n### 老师：\n每条线都以目前这三个技术方向的几个主要负责人来作为主讲老师，持续系列分享。当然我更希望是在坐的每位同学，提前看教程，自主提出当老师。我觉得大家都是从0基础开始，每个人都有资格来当老师，哪怕当老师犯了错，下面有经验的学生也会纠正，对你本人收益也是最大的。所以我提倡这种自主行为，为此我会设立讲师奖励。\n\n### 奖励：\n计划每个季度，对前三名讲师给予买书补贴（具体费用如下）。\n```\n一次/一季度的前三名次数讲师: (80+100+120) * 4个季度 = 1200\n一次/一季度的 Happy Time: 250 * 4 = 1000 ```\n\n分享博客站点： 1. 分享会讲师内容  2. 大家工作上或学习中的体会\n\n","slug":"background","published":1,"updated":"2017-07-28T11:11:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6g39suv0002y2r719vjv0mb","content":"<h3 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h3><p>今年我和很多同学谈17年KPI的时候，发现很多同学都在说同一件事，就是想学习，想团队有一个持续的分享会，想有一个大牛来指导他们去学习。所以能看出来，大家都渴望新知识，都想团队有个持续的分享会。</p>\n<h3 id=\"现状：\"><a href=\"#现状：\" class=\"headerlink\" title=\"现状：\"></a>现状：</h3><p>目前分享会形式主要是‘散养’，大家自主选课题，自己感兴趣的主题分享，这种形式的分享有两个很大的困难</p>\n<ol>\n<li>不固定，不持久，想来一发就一发。</li>\n<li>主题与大家不match<br>主讲在上面说，下面的同学用很渴望的眼神认真的听着，但就是听不懂。我一般一次分享会做完后，我都用问过其中的一些同学，没对主讲课题做一些基础的准备的话，绝大多数人都是这种情况。所以这种形式的分享最佳收益者是主讲人，对于听众效果应该不是最好的。<br>所以年初来，我一直在考虑解决这个问题，能给大家一个固定又持久，不管对主讲还是对听众都有收获的分享会。</li>\n</ol>\n<p>正因为有目前分享会有这种问题，而且我们团队人越来越多啦，我相信团队对于这种分享技术的氛围会越来越强烈。所以我一直在想以哪种分享形式来解决这些问题。目前我有一些想法，也跟佳敏做了讨论，他还是肯定提倡我这种做法。所以我觉得是时候跟大家说下，看看大家的反馈。</p>\n<p>新分享会新主题增加：<strong> “回归技术教程，做系列分享”</strong></p>\n<h3 id=\"形式：\"><a href=\"#形式：\" class=\"headerlink\" title=\"形式：\"></a>形式：</h3><p>引入学校上课形式，会以17年团队技术KPI的三块：<strong> react框架、RN技术、node技术 </strong>找三本经典教程，去买PDF版本，分发给大家。分享会根据制定出一个课程表，以章节作为一个课时，每周一节课来分享三本教程中的每一章内容。量不大吧？这样只要大家提前去看，带着每章的问题来听课，内容上跟讲师也能match上，可能效果会更好些。</p>\n<h3 id=\"分享时间：\"><a href=\"#分享时间：\" class=\"headerlink\" title=\"分享时间：\"></a>分享时间：</h3><p> 以课程表为准</p>\n<h3 id=\"老师：\"><a href=\"#老师：\" class=\"headerlink\" title=\"老师：\"></a>老师：</h3><p>每条线都以目前这三个技术方向的几个主要负责人来作为主讲老师，持续系列分享。当然我更希望是在坐的每位同学，提前看教程，自主提出当老师。我觉得大家都是从0基础开始，每个人都有资格来当老师，哪怕当老师犯了错，下面有经验的学生也会纠正，对你本人收益也是最大的。所以我提倡这种自主行为，为此我会设立讲师奖励。</p>\n<h3 id=\"奖励：\"><a href=\"#奖励：\" class=\"headerlink\" title=\"奖励：\"></a>奖励：</h3><p>计划每个季度，对前三名讲师给予买书补贴（具体费用如下）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">一次/一季度的前三名次数讲师: (80+100+120) * 4个季度 = 1200</div><div class=\"line\">一次/一季度的 Happy Time: 250 * 4 = 1000</div></pre></td></tr></table></figure></p>\n<p>分享博客站点： 1. 分享会讲师内容  2. 大家工作上或学习中的体会</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h3><p>今年我和很多同学谈17年KPI的时候，发现很多同学都在说同一件事，就是想学习，想团队有一个持续的分享会，想有一个大牛来指导他们去学习。所以能看出来，大家都渴望新知识，都想团队有个持续的分享会。</p>\n<h3 id=\"现状：\"><a href=\"#现状：\" class=\"headerlink\" title=\"现状：\"></a>现状：</h3><p>目前分享会形式主要是‘散养’，大家自主选课题，自己感兴趣的主题分享，这种形式的分享有两个很大的困难</p>\n<ol>\n<li>不固定，不持久，想来一发就一发。</li>\n<li>主题与大家不match<br>主讲在上面说，下面的同学用很渴望的眼神认真的听着，但就是听不懂。我一般一次分享会做完后，我都用问过其中的一些同学，没对主讲课题做一些基础的准备的话，绝大多数人都是这种情况。所以这种形式的分享最佳收益者是主讲人，对于听众效果应该不是最好的。<br>所以年初来，我一直在考虑解决这个问题，能给大家一个固定又持久，不管对主讲还是对听众都有收获的分享会。</li>\n</ol>\n<p>正因为有目前分享会有这种问题，而且我们团队人越来越多啦，我相信团队对于这种分享技术的氛围会越来越强烈。所以我一直在想以哪种分享形式来解决这些问题。目前我有一些想法，也跟佳敏做了讨论，他还是肯定提倡我这种做法。所以我觉得是时候跟大家说下，看看大家的反馈。</p>\n<p>新分享会新主题增加：<strong> “回归技术教程，做系列分享”</strong></p>\n<h3 id=\"形式：\"><a href=\"#形式：\" class=\"headerlink\" title=\"形式：\"></a>形式：</h3><p>引入学校上课形式，会以17年团队技术KPI的三块：<strong> react框架、RN技术、node技术 </strong>找三本经典教程，去买PDF版本，分发给大家。分享会根据制定出一个课程表，以章节作为一个课时，每周一节课来分享三本教程中的每一章内容。量不大吧？这样只要大家提前去看，带着每章的问题来听课，内容上跟讲师也能match上，可能效果会更好些。</p>\n<h3 id=\"分享时间：\"><a href=\"#分享时间：\" class=\"headerlink\" title=\"分享时间：\"></a>分享时间：</h3><p> 以课程表为准</p>\n<h3 id=\"老师：\"><a href=\"#老师：\" class=\"headerlink\" title=\"老师：\"></a>老师：</h3><p>每条线都以目前这三个技术方向的几个主要负责人来作为主讲老师，持续系列分享。当然我更希望是在坐的每位同学，提前看教程，自主提出当老师。我觉得大家都是从0基础开始，每个人都有资格来当老师，哪怕当老师犯了错，下面有经验的学生也会纠正，对你本人收益也是最大的。所以我提倡这种自主行为，为此我会设立讲师奖励。</p>\n<h3 id=\"奖励：\"><a href=\"#奖励：\" class=\"headerlink\" title=\"奖励：\"></a>奖励：</h3><p>计划每个季度，对前三名讲师给予买书补贴（具体费用如下）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">一次/一季度的前三名次数讲师: (80+100+120) * 4个季度 = 1200</div><div class=\"line\">一次/一季度的 Happy Time: 250 * 4 = 1000</div></pre></td></tr></table></figure></p>\n<p>分享博客站点： 1. 分享会讲师内容  2. 大家工作上或学习中的体会</p>\n"},{"title":"如何新建codeReview页面？","date":"2017-08-16T06:01:22.000Z","_content":"\n所有文章默认以md形式保存在Hexo目录下的source/_post文件夹中。\n或者可以直接在该目录下新建md类型的文档，就能在执行hexo g的时候渲染。新建的文章需要添加一些yml信息，如下：\n\n```\n---\ntitle:Redux\t\t//标题\ndate: 2017-03-21 19:11:05  //编辑这篇文章的时间\ntags:\t\t\t\t//文章tag\n- React框架\n- RN技术\n- Node技术\n---\n```\n\n###  新建codeReview:（为文章添加分类）\n如果要新建一篇code-review，需要为文章添加其分类信息`categories: codeReview`\n系统会自动为其归档为codeReview类目\n\n```\n---\ntitle: 第二篇code review\ndate: 2017-07-28 19:02:08\ntags:\ncategories:\n- codeReview\n---\n\nsome code review\n```\n\n*PS*: 我们会定期部署[codeReview](http://git.yqb.pub/h5/codeReview)库内部的md文档","source":"_posts/code-guide.md","raw":"---\ntitle: 如何新建codeReview页面？\ndate: 2017-08-16 14:01:22\ncategories:\n- codeReview\n---\n\n所有文章默认以md形式保存在Hexo目录下的source/_post文件夹中。\n或者可以直接在该目录下新建md类型的文档，就能在执行hexo g的时候渲染。新建的文章需要添加一些yml信息，如下：\n\n```\n---\ntitle:Redux\t\t//标题\ndate: 2017-03-21 19:11:05  //编辑这篇文章的时间\ntags:\t\t\t\t//文章tag\n- React框架\n- RN技术\n- Node技术\n---\n```\n\n###  新建codeReview:（为文章添加分类）\n如果要新建一篇code-review，需要为文章添加其分类信息`categories: codeReview`\n系统会自动为其归档为codeReview类目\n\n```\n---\ntitle: 第二篇code review\ndate: 2017-07-28 19:02:08\ntags:\ncategories:\n- codeReview\n---\n\nsome code review\n```\n\n*PS*: 我们会定期部署[codeReview](http://git.yqb.pub/h5/codeReview)库内部的md文档","slug":"code-guide","published":1,"updated":"2017-08-17T03:17:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6g39sv00004y2r7pcrft74l","content":"<p>所有文章默认以md形式保存在Hexo目录下的source/_post文件夹中。<br>或者可以直接在该目录下新建md类型的文档，就能在执行hexo g的时候渲染。新建的文章需要添加一些yml信息，如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title:Redux\t\t//标题</div><div class=\"line\">date: 2017-03-21 19:11:05  //编辑这篇文章的时间</div><div class=\"line\">tags:\t\t\t\t//文章tag</div><div class=\"line\">- React框架</div><div class=\"line\">- RN技术</div><div class=\"line\">- Node技术</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h3 id=\"新建codeReview-（为文章添加分类）\"><a href=\"#新建codeReview-（为文章添加分类）\" class=\"headerlink\" title=\"新建codeReview:（为文章添加分类）\"></a>新建codeReview:（为文章添加分类）</h3><p>如果要新建一篇code-review，需要为文章添加其分类信息<code>categories: codeReview</code><br>系统会自动为其归档为codeReview类目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 第二篇code review</div><div class=\"line\">date: 2017-07-28 19:02:08</div><div class=\"line\">tags:</div><div class=\"line\">categories:</div><div class=\"line\">- codeReview</div><div class=\"line\">---</div><div class=\"line\"></div><div class=\"line\">some code review</div></pre></td></tr></table></figure>\n<p><em>PS</em>: 我们会定期部署<a href=\"http://git.yqb.pub/h5/codeReview\" target=\"_blank\" rel=\"external\">codeReview</a>库内部的md文档</p>\n","site":{"data":{}},"excerpt":"","more":"<p>所有文章默认以md形式保存在Hexo目录下的source/_post文件夹中。<br>或者可以直接在该目录下新建md类型的文档，就能在执行hexo g的时候渲染。新建的文章需要添加一些yml信息，如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title:Redux\t\t//标题</div><div class=\"line\">date: 2017-03-21 19:11:05  //编辑这篇文章的时间</div><div class=\"line\">tags:\t\t\t\t//文章tag</div><div class=\"line\">- React框架</div><div class=\"line\">- RN技术</div><div class=\"line\">- Node技术</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h3 id=\"新建codeReview-（为文章添加分类）\"><a href=\"#新建codeReview-（为文章添加分类）\" class=\"headerlink\" title=\"新建codeReview:（为文章添加分类）\"></a>新建codeReview:（为文章添加分类）</h3><p>如果要新建一篇code-review，需要为文章添加其分类信息<code>categories: codeReview</code><br>系统会自动为其归档为codeReview类目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 第二篇code review</div><div class=\"line\">date: 2017-07-28 19:02:08</div><div class=\"line\">tags:</div><div class=\"line\">categories:</div><div class=\"line\">- codeReview</div><div class=\"line\">---</div><div class=\"line\"></div><div class=\"line\">some code review</div></pre></td></tr></table></figure>\n<p><em>PS</em>: 我们会定期部署<a href=\"http://git.yqb.pub/h5/codeReview\" target=\"_blank\" rel=\"external\">codeReview</a>库内部的md文档</p>\n"},{"title":"redux","date":"2017-03-28T10:06:37.000Z","_content":"# redux\n\n## 推荐文档\n\n1. redux 生态系统:http://cn.redux.js.org/docs/introduction/Ecosystem.html\n1. 中文官方文档: http://cn.redux.js.org/index.html\n2. 英文官方文档: http://redux.js.org/\n3. github精简教程: https://github.com/react-guide/redux-tutorial-cn#redux-tutorial\n\n## 什么是redux\n1. 随着 JavaScript 单页应用开发日趋复杂，JavaScript 需要管理比任何时候都要多的 state （状态）。\n2. 通过限制更新发生的时间和方式，Redux 试图让 state 的变化变得可预测。\n\n3. Redux是JS状态容器.提供可预测化的状态管理. \n\n\n## 三大原则\n\n1. 单一数据源\n    * 整个应用的 state 被储存在一棵 object tree 中，并且这个 object tree 只存在于唯一一个 store 中。\n\n2. State 是只读的\n    * 惟一改变 state 的方法就是触发 action，action 是一个用于描述已发生事件的普通对象。\n    \n3. 使用纯函数来执行修改\n    * 为了描述 action 如何改变 state tree ，你需要编写 reducers。\n    \n    \n## 现实案例\n公司项目代码trunk管理\n\n|...|对应关系| 职责|\n|:---:|:---:|:---:|\n|我们|action |表达修改trunk   代码的意图|\n|双星级想出来的修改的方法|reducers |改变公司代码|\n|双星级 |combine reducer |reducers集合|\n|trunk |store |存储公司代码状态的地方|\n\n\n\n\n\n## Action \n\n* 表达我们修改store的意图\n* 只是描述了有事情发生了这一事实，并没有指明应用如何更新 state\n*   store 数据的唯一来源\n*   一般来说你会通过 store.dispatch() 将 action 传到 store    \n* Action 创建函数\n    * 在 Redux 中的 action 创建函数只是简单的返回一个 action\n```javascript\nfunction addTodo(text) {\n  return {\n    type: ADD_TODO,\n    text\n  }\n}\n```\nAction.js\n```javascript\n/*\n * action 类型\n */\n\nexport const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\n\n/*\n * 其它的常量\n */\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n\n/*\n * action 创建函数\n */\n\nexport function addTodo(text) {\n  return { type: ADD_TODO, text }\n}\n\nexport function toggleTodo(index) {\n  return { type: TOGGLE_TODO, index }\n}\n\nexport function setVisibilityFilter(filter) {\n  return { type: SET_VISIBILITY_FILTER, filter }\n}\n```\n\n## Reducer \n* Action 只是描述了有事情发生了这一事实，并没有指明应用如何更新 state。而这正是 reducer 要做的事情。\n* Action 处理\n    * reducer 就是一个纯函数，接收旧的 state 和 action，返回新的 state。\n* 不要直接修改 state。 使用 Object.assign() 新建了一个副本。不能这样使用 Object.assign(state, { visibilityFilter: action.filter })，因为它会改变第一个参数的值。你必须把第一个参数设置为空对象。你也可以开启对ES7提案对象展开运算符的支持, 从而使用 { ...state, ...newState } 达到相同的目的。\n  \n* 在 default 情况下返回旧的 state。遇到未知的 action 时，一定要返回旧的 state。\n* 在写reducer时候,注意store的数据结构\n\n## 纯函数 \n* 纯函数是指 不依赖于且不改变它作用域之外的变量状态的函数。\n* 也就是说， 纯函数的返回值只由它调用时的参数决定 ，它的执行不依赖于系统的状态（比如：何时、何处调用它）。\n\n\n\n![](/img/ReduxFlow.png)\n\n#### connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])\n\n#### [mapStateToProps(state, [ownProps]): stateProps]\n\n* (Function): 如果定义该参数，组件将会监听 Redux store 的变化。任何时候，只要 Redux store 发生改变，mapStateToProps 函数就会被调用。\n* 该回调函数必须返回一个纯对象，这个对象会与组件的 props 合并。\n* 如果你省略了这个参数，你的组件将不会监听 Redux store。\n* 如果指定了该回调函数中的第二个参数 ownProps，则该参数的值为传递到组件的 props，而且只要组件接收到新的 props，mapStateToProps 也会被调用（例如，当 props 接收到来自父组件一个小小的改动，那么你所使用的 ownProps 参数，mapStateToProps 都会被重新计算）。\n\n#### [mapDispatchToProps(dispatch, [ownProps]): dispatchProps] \n* (Object or Function): 如果传递的是一个对象，那么每个定义在该对象的函数都将被当作 Redux action creator，而且这个对象会与 Redux store 绑定在一起，其中所定义的方法名将作为属性名，合并到组件的 props 中。\n* 如果传递的是一个函数，该函数将接收一个 dispatch 函数，然后由你来决定如何返回一个对象，这个对象通过 dispatch 函数与 action creator 以某种方式绑定在一起（提示：你也许会用到 Redux 的辅助函数 bindActionCreators()）。\n* 如果你省略这个 mapDispatchToProps 参数，默认情况下，dispatch 会注入到你的组件 props 中。\n* 如果指定了该回调函数中第二个参数 ownProps，该参数的值为传递到组件的 props，而且只要组件接收到新 props，mapDispatchToProps 也会被调用。\n     \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/redux.md","raw":"---\ntitle: redux\ndate: 2017-03-28 18:06:37\ntags:\n- RN技术\ncategories:\n- react\n---\n# redux\n\n## 推荐文档\n\n1. redux 生态系统:http://cn.redux.js.org/docs/introduction/Ecosystem.html\n1. 中文官方文档: http://cn.redux.js.org/index.html\n2. 英文官方文档: http://redux.js.org/\n3. github精简教程: https://github.com/react-guide/redux-tutorial-cn#redux-tutorial\n\n## 什么是redux\n1. 随着 JavaScript 单页应用开发日趋复杂，JavaScript 需要管理比任何时候都要多的 state （状态）。\n2. 通过限制更新发生的时间和方式，Redux 试图让 state 的变化变得可预测。\n\n3. Redux是JS状态容器.提供可预测化的状态管理. \n\n\n## 三大原则\n\n1. 单一数据源\n    * 整个应用的 state 被储存在一棵 object tree 中，并且这个 object tree 只存在于唯一一个 store 中。\n\n2. State 是只读的\n    * 惟一改变 state 的方法就是触发 action，action 是一个用于描述已发生事件的普通对象。\n    \n3. 使用纯函数来执行修改\n    * 为了描述 action 如何改变 state tree ，你需要编写 reducers。\n    \n    \n## 现实案例\n公司项目代码trunk管理\n\n|...|对应关系| 职责|\n|:---:|:---:|:---:|\n|我们|action |表达修改trunk   代码的意图|\n|双星级想出来的修改的方法|reducers |改变公司代码|\n|双星级 |combine reducer |reducers集合|\n|trunk |store |存储公司代码状态的地方|\n\n\n\n\n\n## Action \n\n* 表达我们修改store的意图\n* 只是描述了有事情发生了这一事实，并没有指明应用如何更新 state\n*   store 数据的唯一来源\n*   一般来说你会通过 store.dispatch() 将 action 传到 store    \n* Action 创建函数\n    * 在 Redux 中的 action 创建函数只是简单的返回一个 action\n```javascript\nfunction addTodo(text) {\n  return {\n    type: ADD_TODO,\n    text\n  }\n}\n```\nAction.js\n```javascript\n/*\n * action 类型\n */\n\nexport const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\n\n/*\n * 其它的常量\n */\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n\n/*\n * action 创建函数\n */\n\nexport function addTodo(text) {\n  return { type: ADD_TODO, text }\n}\n\nexport function toggleTodo(index) {\n  return { type: TOGGLE_TODO, index }\n}\n\nexport function setVisibilityFilter(filter) {\n  return { type: SET_VISIBILITY_FILTER, filter }\n}\n```\n\n## Reducer \n* Action 只是描述了有事情发生了这一事实，并没有指明应用如何更新 state。而这正是 reducer 要做的事情。\n* Action 处理\n    * reducer 就是一个纯函数，接收旧的 state 和 action，返回新的 state。\n* 不要直接修改 state。 使用 Object.assign() 新建了一个副本。不能这样使用 Object.assign(state, { visibilityFilter: action.filter })，因为它会改变第一个参数的值。你必须把第一个参数设置为空对象。你也可以开启对ES7提案对象展开运算符的支持, 从而使用 { ...state, ...newState } 达到相同的目的。\n  \n* 在 default 情况下返回旧的 state。遇到未知的 action 时，一定要返回旧的 state。\n* 在写reducer时候,注意store的数据结构\n\n## 纯函数 \n* 纯函数是指 不依赖于且不改变它作用域之外的变量状态的函数。\n* 也就是说， 纯函数的返回值只由它调用时的参数决定 ，它的执行不依赖于系统的状态（比如：何时、何处调用它）。\n\n\n\n![](/img/ReduxFlow.png)\n\n#### connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])\n\n#### [mapStateToProps(state, [ownProps]): stateProps]\n\n* (Function): 如果定义该参数，组件将会监听 Redux store 的变化。任何时候，只要 Redux store 发生改变，mapStateToProps 函数就会被调用。\n* 该回调函数必须返回一个纯对象，这个对象会与组件的 props 合并。\n* 如果你省略了这个参数，你的组件将不会监听 Redux store。\n* 如果指定了该回调函数中的第二个参数 ownProps，则该参数的值为传递到组件的 props，而且只要组件接收到新的 props，mapStateToProps 也会被调用（例如，当 props 接收到来自父组件一个小小的改动，那么你所使用的 ownProps 参数，mapStateToProps 都会被重新计算）。\n\n#### [mapDispatchToProps(dispatch, [ownProps]): dispatchProps] \n* (Object or Function): 如果传递的是一个对象，那么每个定义在该对象的函数都将被当作 Redux action creator，而且这个对象会与 Redux store 绑定在一起，其中所定义的方法名将作为属性名，合并到组件的 props 中。\n* 如果传递的是一个函数，该函数将接收一个 dispatch 函数，然后由你来决定如何返回一个对象，这个对象通过 dispatch 函数与 action creator 以某种方式绑定在一起（提示：你也许会用到 Redux 的辅助函数 bindActionCreators()）。\n* 如果你省略这个 mapDispatchToProps 参数，默认情况下，dispatch 会注入到你的组件 props 中。\n* 如果指定了该回调函数中第二个参数 ownProps，该参数的值为传递到组件的 props，而且只要组件接收到新 props，mapDispatchToProps 也会被调用。\n     \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"redux","published":1,"updated":"2017-07-28T11:10:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6g39svd0007y2r7dp2mh1gc","content":"<h1 id=\"redux\"><a href=\"#redux\" class=\"headerlink\" title=\"redux\"></a>redux</h1><h2 id=\"推荐文档\"><a href=\"#推荐文档\" class=\"headerlink\" title=\"推荐文档\"></a>推荐文档</h2><ol>\n<li>redux 生态系统:<a href=\"http://cn.redux.js.org/docs/introduction/Ecosystem.html\" target=\"_blank\" rel=\"external\">http://cn.redux.js.org/docs/introduction/Ecosystem.html</a></li>\n<li>中文官方文档: <a href=\"http://cn.redux.js.org/index.html\" target=\"_blank\" rel=\"external\">http://cn.redux.js.org/index.html</a></li>\n<li>英文官方文档: <a href=\"http://redux.js.org/\" target=\"_blank\" rel=\"external\">http://redux.js.org/</a></li>\n<li>github精简教程: <a href=\"https://github.com/react-guide/redux-tutorial-cn#redux-tutorial\" target=\"_blank\" rel=\"external\">https://github.com/react-guide/redux-tutorial-cn#redux-tutorial</a></li>\n</ol>\n<h2 id=\"什么是redux\"><a href=\"#什么是redux\" class=\"headerlink\" title=\"什么是redux\"></a>什么是redux</h2><ol>\n<li>随着 JavaScript 单页应用开发日趋复杂，JavaScript 需要管理比任何时候都要多的 state （状态）。</li>\n<li><p>通过限制更新发生的时间和方式，Redux 试图让 state 的变化变得可预测。</p>\n</li>\n<li><p>Redux是JS状态容器.提供可预测化的状态管理. </p>\n</li>\n</ol>\n<h2 id=\"三大原则\"><a href=\"#三大原则\" class=\"headerlink\" title=\"三大原则\"></a>三大原则</h2><ol>\n<li><p>单一数据源</p>\n<ul>\n<li>整个应用的 state 被储存在一棵 object tree 中，并且这个 object tree 只存在于唯一一个 store 中。</li>\n</ul>\n</li>\n<li><p>State 是只读的</p>\n<ul>\n<li>惟一改变 state 的方法就是触发 action，action 是一个用于描述已发生事件的普通对象。</li>\n</ul>\n</li>\n<li><p>使用纯函数来执行修改</p>\n<ul>\n<li>为了描述 action 如何改变 state tree ，你需要编写 reducers。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"现实案例\"><a href=\"#现实案例\" class=\"headerlink\" title=\"现实案例\"></a>现实案例</h2><p>公司项目代码trunk管理</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">…</th>\n<th style=\"text-align:center\">对应关系</th>\n<th style=\"text-align:center\">职责</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">我们</td>\n<td style=\"text-align:center\">action</td>\n<td style=\"text-align:center\">表达修改trunk   代码的意图</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">双星级想出来的修改的方法</td>\n<td style=\"text-align:center\">reducers</td>\n<td style=\"text-align:center\">改变公司代码</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">双星级</td>\n<td style=\"text-align:center\">combine reducer</td>\n<td style=\"text-align:center\">reducers集合</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">trunk</td>\n<td style=\"text-align:center\">store</td>\n<td style=\"text-align:center\">存储公司代码状态的地方</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Action\"><a href=\"#Action\" class=\"headerlink\" title=\"Action\"></a>Action</h2><ul>\n<li>表达我们修改store的意图</li>\n<li>只是描述了有事情发生了这一事实，并没有指明应用如何更新 state</li>\n<li>store 数据的唯一来源</li>\n<li>一般来说你会通过 store.dispatch() 将 action 传到 store    </li>\n<li>Action 创建函数<ul>\n<li>在 Redux 中的 action 创建函数只是简单的返回一个 action<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addTodo</span>(<span class=\"params\">text</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    type: ADD_TODO,</div><div class=\"line\">    text</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p>Action.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * action 类型</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> ADD_TODO = <span class=\"string\">'ADD_TODO'</span>;</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> TOGGLE_TODO = <span class=\"string\">'TOGGLE_TODO'</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> SET_VISIBILITY_FILTER = <span class=\"string\">'SET_VISIBILITY_FILTER'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * 其它的常量</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> VisibilityFilters = &#123;</div><div class=\"line\">  SHOW_ALL: <span class=\"string\">'SHOW_ALL'</span>,</div><div class=\"line\">  SHOW_COMPLETED: <span class=\"string\">'SHOW_COMPLETED'</span>,</div><div class=\"line\">  SHOW_ACTIVE: <span class=\"string\">'SHOW_ACTIVE'</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * action 创建函数</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addTodo</span>(<span class=\"params\">text</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">type</span>: ADD_TODO, text &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleTodo</span>(<span class=\"params\">index</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">type</span>: TOGGLE_TODO, index &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setVisibilityFilter</span>(<span class=\"params\">filter</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">type</span>: SET_VISIBILITY_FILTER, filter &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Reducer\"><a href=\"#Reducer\" class=\"headerlink\" title=\"Reducer\"></a>Reducer</h2><ul>\n<li>Action 只是描述了有事情发生了这一事实，并没有指明应用如何更新 state。而这正是 reducer 要做的事情。</li>\n<li>Action 处理<ul>\n<li>reducer 就是一个纯函数，接收旧的 state 和 action，返回新的 state。</li>\n</ul>\n</li>\n<li><p>不要直接修改 state。 使用 Object.assign() 新建了一个副本。不能这样使用 Object.assign(state, { visibilityFilter: action.filter })，因为它会改变第一个参数的值。你必须把第一个参数设置为空对象。你也可以开启对ES7提案对象展开运算符的支持, 从而使用 { …state, …newState } 达到相同的目的。</p>\n</li>\n<li><p>在 default 情况下返回旧的 state。遇到未知的 action 时，一定要返回旧的 state。</p>\n</li>\n<li>在写reducer时候,注意store的数据结构</li>\n</ul>\n<h2 id=\"纯函数\"><a href=\"#纯函数\" class=\"headerlink\" title=\"纯函数\"></a>纯函数</h2><ul>\n<li>纯函数是指 不依赖于且不改变它作用域之外的变量状态的函数。</li>\n<li>也就是说， 纯函数的返回值只由它调用时的参数决定 ，它的执行不依赖于系统的状态（比如：何时、何处调用它）。</li>\n</ul>\n<p><img src=\"/img/ReduxFlow.png\" alt=\"\"></p>\n<h4 id=\"connect-mapStateToProps-mapDispatchToProps-mergeProps-options\"><a href=\"#connect-mapStateToProps-mapDispatchToProps-mergeProps-options\" class=\"headerlink\" title=\"connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])\"></a>connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])</h4><h4 id=\"mapStateToProps-state-ownProps-stateProps\"><a href=\"#mapStateToProps-state-ownProps-stateProps\" class=\"headerlink\" title=\"[mapStateToProps(state, [ownProps]): stateProps]\"></a>[mapStateToProps(state, [ownProps]): stateProps]</h4><ul>\n<li>(Function): 如果定义该参数，组件将会监听 Redux store 的变化。任何时候，只要 Redux store 发生改变，mapStateToProps 函数就会被调用。</li>\n<li>该回调函数必须返回一个纯对象，这个对象会与组件的 props 合并。</li>\n<li>如果你省略了这个参数，你的组件将不会监听 Redux store。</li>\n<li>如果指定了该回调函数中的第二个参数 ownProps，则该参数的值为传递到组件的 props，而且只要组件接收到新的 props，mapStateToProps 也会被调用（例如，当 props 接收到来自父组件一个小小的改动，那么你所使用的 ownProps 参数，mapStateToProps 都会被重新计算）。</li>\n</ul>\n<h4 id=\"mapDispatchToProps-dispatch-ownProps-dispatchProps\"><a href=\"#mapDispatchToProps-dispatch-ownProps-dispatchProps\" class=\"headerlink\" title=\"[mapDispatchToProps(dispatch, [ownProps]): dispatchProps]\"></a>[mapDispatchToProps(dispatch, [ownProps]): dispatchProps]</h4><ul>\n<li>(Object or Function): 如果传递的是一个对象，那么每个定义在该对象的函数都将被当作 Redux action creator，而且这个对象会与 Redux store 绑定在一起，其中所定义的方法名将作为属性名，合并到组件的 props 中。</li>\n<li>如果传递的是一个函数，该函数将接收一个 dispatch 函数，然后由你来决定如何返回一个对象，这个对象通过 dispatch 函数与 action creator 以某种方式绑定在一起（提示：你也许会用到 Redux 的辅助函数 bindActionCreators()）。</li>\n<li>如果你省略这个 mapDispatchToProps 参数，默认情况下，dispatch 会注入到你的组件 props 中。</li>\n<li>如果指定了该回调函数中第二个参数 ownProps，该参数的值为传递到组件的 props，而且只要组件接收到新 props，mapDispatchToProps 也会被调用。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"redux\"><a href=\"#redux\" class=\"headerlink\" title=\"redux\"></a>redux</h1><h2 id=\"推荐文档\"><a href=\"#推荐文档\" class=\"headerlink\" title=\"推荐文档\"></a>推荐文档</h2><ol>\n<li>redux 生态系统:<a href=\"http://cn.redux.js.org/docs/introduction/Ecosystem.html\" target=\"_blank\" rel=\"external\">http://cn.redux.js.org/docs/introduction/Ecosystem.html</a></li>\n<li>中文官方文档: <a href=\"http://cn.redux.js.org/index.html\" target=\"_blank\" rel=\"external\">http://cn.redux.js.org/index.html</a></li>\n<li>英文官方文档: <a href=\"http://redux.js.org/\" target=\"_blank\" rel=\"external\">http://redux.js.org/</a></li>\n<li>github精简教程: <a href=\"https://github.com/react-guide/redux-tutorial-cn#redux-tutorial\" target=\"_blank\" rel=\"external\">https://github.com/react-guide/redux-tutorial-cn#redux-tutorial</a></li>\n</ol>\n<h2 id=\"什么是redux\"><a href=\"#什么是redux\" class=\"headerlink\" title=\"什么是redux\"></a>什么是redux</h2><ol>\n<li>随着 JavaScript 单页应用开发日趋复杂，JavaScript 需要管理比任何时候都要多的 state （状态）。</li>\n<li><p>通过限制更新发生的时间和方式，Redux 试图让 state 的变化变得可预测。</p>\n</li>\n<li><p>Redux是JS状态容器.提供可预测化的状态管理. </p>\n</li>\n</ol>\n<h2 id=\"三大原则\"><a href=\"#三大原则\" class=\"headerlink\" title=\"三大原则\"></a>三大原则</h2><ol>\n<li><p>单一数据源</p>\n<ul>\n<li>整个应用的 state 被储存在一棵 object tree 中，并且这个 object tree 只存在于唯一一个 store 中。</li>\n</ul>\n</li>\n<li><p>State 是只读的</p>\n<ul>\n<li>惟一改变 state 的方法就是触发 action，action 是一个用于描述已发生事件的普通对象。</li>\n</ul>\n</li>\n<li><p>使用纯函数来执行修改</p>\n<ul>\n<li>为了描述 action 如何改变 state tree ，你需要编写 reducers。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"现实案例\"><a href=\"#现实案例\" class=\"headerlink\" title=\"现实案例\"></a>现实案例</h2><p>公司项目代码trunk管理</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">…</th>\n<th style=\"text-align:center\">对应关系</th>\n<th style=\"text-align:center\">职责</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">我们</td>\n<td style=\"text-align:center\">action</td>\n<td style=\"text-align:center\">表达修改trunk   代码的意图</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">双星级想出来的修改的方法</td>\n<td style=\"text-align:center\">reducers</td>\n<td style=\"text-align:center\">改变公司代码</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">双星级</td>\n<td style=\"text-align:center\">combine reducer</td>\n<td style=\"text-align:center\">reducers集合</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">trunk</td>\n<td style=\"text-align:center\">store</td>\n<td style=\"text-align:center\">存储公司代码状态的地方</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Action\"><a href=\"#Action\" class=\"headerlink\" title=\"Action\"></a>Action</h2><ul>\n<li>表达我们修改store的意图</li>\n<li>只是描述了有事情发生了这一事实，并没有指明应用如何更新 state</li>\n<li>store 数据的唯一来源</li>\n<li>一般来说你会通过 store.dispatch() 将 action 传到 store    </li>\n<li>Action 创建函数<ul>\n<li>在 Redux 中的 action 创建函数只是简单的返回一个 action<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addTodo</span>(<span class=\"params\">text</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    type: ADD_TODO,</div><div class=\"line\">    text</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p>Action.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * action 类型</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> ADD_TODO = <span class=\"string\">'ADD_TODO'</span>;</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> TOGGLE_TODO = <span class=\"string\">'TOGGLE_TODO'</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> SET_VISIBILITY_FILTER = <span class=\"string\">'SET_VISIBILITY_FILTER'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * 其它的常量</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> VisibilityFilters = &#123;</div><div class=\"line\">  SHOW_ALL: <span class=\"string\">'SHOW_ALL'</span>,</div><div class=\"line\">  SHOW_COMPLETED: <span class=\"string\">'SHOW_COMPLETED'</span>,</div><div class=\"line\">  SHOW_ACTIVE: <span class=\"string\">'SHOW_ACTIVE'</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * action 创建函数</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addTodo</span>(<span class=\"params\">text</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">type</span>: ADD_TODO, text &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleTodo</span>(<span class=\"params\">index</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">type</span>: TOGGLE_TODO, index &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setVisibilityFilter</span>(<span class=\"params\">filter</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">type</span>: SET_VISIBILITY_FILTER, filter &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Reducer\"><a href=\"#Reducer\" class=\"headerlink\" title=\"Reducer\"></a>Reducer</h2><ul>\n<li>Action 只是描述了有事情发生了这一事实，并没有指明应用如何更新 state。而这正是 reducer 要做的事情。</li>\n<li>Action 处理<ul>\n<li>reducer 就是一个纯函数，接收旧的 state 和 action，返回新的 state。</li>\n</ul>\n</li>\n<li><p>不要直接修改 state。 使用 Object.assign() 新建了一个副本。不能这样使用 Object.assign(state, { visibilityFilter: action.filter })，因为它会改变第一个参数的值。你必须把第一个参数设置为空对象。你也可以开启对ES7提案对象展开运算符的支持, 从而使用 { …state, …newState } 达到相同的目的。</p>\n</li>\n<li><p>在 default 情况下返回旧的 state。遇到未知的 action 时，一定要返回旧的 state。</p>\n</li>\n<li>在写reducer时候,注意store的数据结构</li>\n</ul>\n<h2 id=\"纯函数\"><a href=\"#纯函数\" class=\"headerlink\" title=\"纯函数\"></a>纯函数</h2><ul>\n<li>纯函数是指 不依赖于且不改变它作用域之外的变量状态的函数。</li>\n<li>也就是说， 纯函数的返回值只由它调用时的参数决定 ，它的执行不依赖于系统的状态（比如：何时、何处调用它）。</li>\n</ul>\n<p><img src=\"/img/ReduxFlow.png\" alt=\"\"></p>\n<h4 id=\"connect-mapStateToProps-mapDispatchToProps-mergeProps-options\"><a href=\"#connect-mapStateToProps-mapDispatchToProps-mergeProps-options\" class=\"headerlink\" title=\"connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])\"></a>connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])</h4><h4 id=\"mapStateToProps-state-ownProps-stateProps\"><a href=\"#mapStateToProps-state-ownProps-stateProps\" class=\"headerlink\" title=\"[mapStateToProps(state, [ownProps]): stateProps]\"></a>[mapStateToProps(state, [ownProps]): stateProps]</h4><ul>\n<li>(Function): 如果定义该参数，组件将会监听 Redux store 的变化。任何时候，只要 Redux store 发生改变，mapStateToProps 函数就会被调用。</li>\n<li>该回调函数必须返回一个纯对象，这个对象会与组件的 props 合并。</li>\n<li>如果你省略了这个参数，你的组件将不会监听 Redux store。</li>\n<li>如果指定了该回调函数中的第二个参数 ownProps，则该参数的值为传递到组件的 props，而且只要组件接收到新的 props，mapStateToProps 也会被调用（例如，当 props 接收到来自父组件一个小小的改动，那么你所使用的 ownProps 参数，mapStateToProps 都会被重新计算）。</li>\n</ul>\n<h4 id=\"mapDispatchToProps-dispatch-ownProps-dispatchProps\"><a href=\"#mapDispatchToProps-dispatch-ownProps-dispatchProps\" class=\"headerlink\" title=\"[mapDispatchToProps(dispatch, [ownProps]): dispatchProps]\"></a>[mapDispatchToProps(dispatch, [ownProps]): dispatchProps]</h4><ul>\n<li>(Object or Function): 如果传递的是一个对象，那么每个定义在该对象的函数都将被当作 Redux action creator，而且这个对象会与 Redux store 绑定在一起，其中所定义的方法名将作为属性名，合并到组件的 props 中。</li>\n<li>如果传递的是一个函数，该函数将接收一个 dispatch 函数，然后由你来决定如何返回一个对象，这个对象通过 dispatch 函数与 action creator 以某种方式绑定在一起（提示：你也许会用到 Redux 的辅助函数 bindActionCreators()）。</li>\n<li>如果你省略这个 mapDispatchToProps 参数，默认情况下，dispatch 会注入到你的组件 props 中。</li>\n<li>如果指定了该回调函数中第二个参数 ownProps，该参数的值为传递到组件的 props，而且只要组件接收到新 props，mapDispatchToProps 也会被调用。</li>\n</ul>\n"},{"title":"node线分享课程计划","date":"2017-03-21T11:11:05.000Z","_content":"## node线分享书籍\n1. **《了不起的nodejs》**：分10个课时\n2. **《深入浅出nodejs》**：分10个课时\n\n## 课程表\n\n### 《了不起的nodejs》\n\n\n| 课时章节       |  日期         |  讲师  |\n| ------------- |:-------------:| -----:|\n|  1. 基础知识 |   | 陈宇 |\n|  2. CLI   |   | 倪敏 |\n|  3. TCP HTTP  |   | 徐佳 |\n|  4. Connect & Express   |   | 林宇宏 |\n|  5. 数据库   |   | 林宇宏 |\n|  6. Redis   |   | 倪敏 |\n|  7. 测试   |   | 陈宇 |\n\n\n### 《深入浅出nodejs》\n\n| 课时章节       |  日期         |  讲师  |\n| ------------- |:-------------:| -----:|\n|  1. Chap1 - Chap2 Node简介及模块  |   | 徐佳 |\n|  2. Chap3 - Chap4 异步IO/异步编程  |   | 徐佳 |\n|  3. Chap5 内存管理  |   | 徐佳 |\n|  4. Chap6 理解Buffer  |   | 徐佳 |\n|  5. Chap7 网络编程　  |   | 徐佳 |\n|  6. Chap8 构建Web应用　  |   | 徐佳 |\n|  7. Chap9 玩转进程  |   | 徐佳 |\n|  8. Chap10 测试  |   | 徐佳 |\n|  9. Chap10 产品化　  |   | 徐佳 |\n|  10. 附录功能-调试Node\\Node编码规范　  |   | 徐佳 |\n","source":"_posts/schedule.md","raw":"---\ntitle: node线分享课程计划\ndate: 2017-03-21 19:11:05\ntags:\n- react框架\n- RN技术\n- node技术\ncategories:\n- node\n---\n## node线分享书籍\n1. **《了不起的nodejs》**：分10个课时\n2. **《深入浅出nodejs》**：分10个课时\n\n## 课程表\n\n### 《了不起的nodejs》\n\n\n| 课时章节       |  日期         |  讲师  |\n| ------------- |:-------------:| -----:|\n|  1. 基础知识 |   | 陈宇 |\n|  2. CLI   |   | 倪敏 |\n|  3. TCP HTTP  |   | 徐佳 |\n|  4. Connect & Express   |   | 林宇宏 |\n|  5. 数据库   |   | 林宇宏 |\n|  6. Redis   |   | 倪敏 |\n|  7. 测试   |   | 陈宇 |\n\n\n### 《深入浅出nodejs》\n\n| 课时章节       |  日期         |  讲师  |\n| ------------- |:-------------:| -----:|\n|  1. Chap1 - Chap2 Node简介及模块  |   | 徐佳 |\n|  2. Chap3 - Chap4 异步IO/异步编程  |   | 徐佳 |\n|  3. Chap5 内存管理  |   | 徐佳 |\n|  4. Chap6 理解Buffer  |   | 徐佳 |\n|  5. Chap7 网络编程　  |   | 徐佳 |\n|  6. Chap8 构建Web应用　  |   | 徐佳 |\n|  7. Chap9 玩转进程  |   | 徐佳 |\n|  8. Chap10 测试  |   | 徐佳 |\n|  9. Chap10 产品化　  |   | 徐佳 |\n|  10. 附录功能-调试Node\\Node编码规范　  |   | 徐佳 |\n","slug":"schedule","published":1,"updated":"2017-07-28T11:11:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6g39svg0008y2r7ujilrs0h","content":"<h2 id=\"node线分享书籍\"><a href=\"#node线分享书籍\" class=\"headerlink\" title=\"node线分享书籍\"></a>node线分享书籍</h2><ol>\n<li><strong>《了不起的nodejs》</strong>：分10个课时</li>\n<li><strong>《深入浅出nodejs》</strong>：分10个课时</li>\n</ol>\n<h2 id=\"课程表\"><a href=\"#课程表\" class=\"headerlink\" title=\"课程表\"></a>课程表</h2><h3 id=\"《了不起的nodejs》\"><a href=\"#《了不起的nodejs》\" class=\"headerlink\" title=\"《了不起的nodejs》\"></a>《了不起的nodejs》</h3><table>\n<thead>\n<tr>\n<th>课时章节</th>\n<th style=\"text-align:center\">日期</th>\n<th style=\"text-align:right\">讲师</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1. 基础知识</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">陈宇</td>\n</tr>\n<tr>\n<td>2. CLI</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">倪敏</td>\n</tr>\n<tr>\n<td>3. TCP HTTP</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>4. Connect &amp; Express</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">林宇宏</td>\n</tr>\n<tr>\n<td>5. 数据库</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">林宇宏</td>\n</tr>\n<tr>\n<td>6. Redis</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">倪敏</td>\n</tr>\n<tr>\n<td>7. 测试</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">陈宇</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"《深入浅出nodejs》\"><a href=\"#《深入浅出nodejs》\" class=\"headerlink\" title=\"《深入浅出nodejs》\"></a>《深入浅出nodejs》</h3><table>\n<thead>\n<tr>\n<th>课时章节</th>\n<th style=\"text-align:center\">日期</th>\n<th style=\"text-align:right\">讲师</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1. Chap1 - Chap2 Node简介及模块</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>2. Chap3 - Chap4 异步IO/异步编程</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>3. Chap5 内存管理</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>4. Chap6 理解Buffer</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>5. Chap7 网络编程　</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>6. Chap8 构建Web应用　</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>7. Chap9 玩转进程</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>8. Chap10 测试</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>9. Chap10 产品化　</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>10. 附录功能-调试Node\\Node编码规范　</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"node线分享书籍\"><a href=\"#node线分享书籍\" class=\"headerlink\" title=\"node线分享书籍\"></a>node线分享书籍</h2><ol>\n<li><strong>《了不起的nodejs》</strong>：分10个课时</li>\n<li><strong>《深入浅出nodejs》</strong>：分10个课时</li>\n</ol>\n<h2 id=\"课程表\"><a href=\"#课程表\" class=\"headerlink\" title=\"课程表\"></a>课程表</h2><h3 id=\"《了不起的nodejs》\"><a href=\"#《了不起的nodejs》\" class=\"headerlink\" title=\"《了不起的nodejs》\"></a>《了不起的nodejs》</h3><table>\n<thead>\n<tr>\n<th>课时章节</th>\n<th style=\"text-align:center\">日期</th>\n<th style=\"text-align:right\">讲师</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1. 基础知识</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">陈宇</td>\n</tr>\n<tr>\n<td>2. CLI</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">倪敏</td>\n</tr>\n<tr>\n<td>3. TCP HTTP</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>4. Connect &amp; Express</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">林宇宏</td>\n</tr>\n<tr>\n<td>5. 数据库</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">林宇宏</td>\n</tr>\n<tr>\n<td>6. Redis</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">倪敏</td>\n</tr>\n<tr>\n<td>7. 测试</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">陈宇</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"《深入浅出nodejs》\"><a href=\"#《深入浅出nodejs》\" class=\"headerlink\" title=\"《深入浅出nodejs》\"></a>《深入浅出nodejs》</h3><table>\n<thead>\n<tr>\n<th>课时章节</th>\n<th style=\"text-align:center\">日期</th>\n<th style=\"text-align:right\">讲师</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1. Chap1 - Chap2 Node简介及模块</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>2. Chap3 - Chap4 异步IO/异步编程</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>3. Chap5 内存管理</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>4. Chap6 理解Buffer</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>5. Chap7 网络编程　</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>6. Chap8 构建Web应用　</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>7. Chap9 玩转进程</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>8. Chap10 测试</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>9. Chap10 产品化　</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n<tr>\n<td>10. 附录功能-调试Node\\Node编码规范　</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\">徐佳</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"导购组 code review 0627","date":"2017-06-27T10:13:37.000Z","_content":"\n##导购组 code review\n***\n| 姓名        | Review对象           |  日期  |\n| ------------- |:-------------:| -----:|\n|   韩爱玲    |  张立鹏 | 2017年6月27日 |\n\n#####修改前代码\n```javascript\n<BottomSharePop from={'detail'}\n    handleBodyTouch={this.handleBodyTouch}\n    shareGoodsOptions={this.shareGoodsOptions}\n    businessType={this.goodsDetail.businessType}\n    shareData={this.props.detailShare}/>\n```\n\n#####review后代码\n```javascript\n<BottomSharePop\n\tfrom = {'detail'}\n\thandleBodyTouch = {this.handleBodyTouch}\n\tshareGoodsOptions = {this.shareGoodsOptions}\n\tbusinessType = {this.goodsDetail.businessType}\n\tshareData = {this.props.detailShare} />\n```\n\n#####点评\n>  组件引用所定义的属性应该单独另起一行，组件如果里边没有需要引用的代码就直接在最后边结束的地方以空格和斜线尖头结束，这样读代码看着也是很清晰的\n\n","source":"_posts/codeReview/guide/2017-6/2017-6-27.md","raw":"---\ntitle: 导购组 code review 0627\ndate: 2017-06-27 18:13:37\ncategories:\n- codeReview\n---\n\n##导购组 code review\n***\n| 姓名        | Review对象           |  日期  |\n| ------------- |:-------------:| -----:|\n|   韩爱玲    |  张立鹏 | 2017年6月27日 |\n\n#####修改前代码\n```javascript\n<BottomSharePop from={'detail'}\n    handleBodyTouch={this.handleBodyTouch}\n    shareGoodsOptions={this.shareGoodsOptions}\n    businessType={this.goodsDetail.businessType}\n    shareData={this.props.detailShare}/>\n```\n\n#####review后代码\n```javascript\n<BottomSharePop\n\tfrom = {'detail'}\n\thandleBodyTouch = {this.handleBodyTouch}\n\tshareGoodsOptions = {this.shareGoodsOptions}\n\tbusinessType = {this.goodsDetail.businessType}\n\tshareData = {this.props.detailShare} />\n```\n\n#####点评\n>  组件引用所定义的属性应该单独另起一行，组件如果里边没有需要引用的代码就直接在最后边结束的地方以空格和斜线尖头结束，这样读代码看着也是很清晰的\n\n","slug":"codeReview/guide/2017-6/2017-6-27","published":1,"updated":"2017-08-15T03:24:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6g39swm000oy2r7nrwnhzwd","content":"<p>##导购组 code review</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">Review对象</th>\n<th style=\"text-align:right\">日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>韩爱玲</td>\n<td style=\"text-align:center\">张立鹏</td>\n<td style=\"text-align:right\">2017年6月27日</td>\n</tr>\n</tbody>\n</table>\n<p>#####修改前代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;BottomSharePop <span class=\"keyword\">from</span>=&#123;<span class=\"string\">'detail'</span>&#125;</div><div class=\"line\">    handleBodyTouch=&#123;<span class=\"keyword\">this</span>.handleBodyTouch&#125;</div><div class=\"line\">    shareGoodsOptions=&#123;<span class=\"keyword\">this</span>.shareGoodsOptions&#125;</div><div class=\"line\">    businessType=&#123;<span class=\"keyword\">this</span>.goodsDetail.businessType&#125;</div><div class=\"line\">    shareData=&#123;<span class=\"keyword\">this</span>.props.detailShare&#125;/&gt;</div></pre></td></tr></table></figure></p>\n<p>#####review后代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;BottomSharePop</div><div class=\"line\">\t<span class=\"keyword\">from</span> = &#123;<span class=\"string\">'detail'</span>&#125;</div><div class=\"line\">\thandleBodyTouch = &#123;<span class=\"keyword\">this</span>.handleBodyTouch&#125;</div><div class=\"line\">\tshareGoodsOptions = &#123;<span class=\"keyword\">this</span>.shareGoodsOptions&#125;</div><div class=\"line\">\tbusinessType = &#123;<span class=\"keyword\">this</span>.goodsDetail.businessType&#125;</div><div class=\"line\">\tshareData = &#123;<span class=\"keyword\">this</span>.props.detailShare&#125; /&gt;</div></pre></td></tr></table></figure></p>\n<p>#####点评</p>\n<blockquote>\n<p> 组件引用所定义的属性应该单独另起一行，组件如果里边没有需要引用的代码就直接在最后边结束的地方以空格和斜线尖头结束，这样读代码看着也是很清晰的</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>##导购组 code review</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">Review对象</th>\n<th style=\"text-align:right\">日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>韩爱玲</td>\n<td style=\"text-align:center\">张立鹏</td>\n<td style=\"text-align:right\">2017年6月27日</td>\n</tr>\n</tbody>\n</table>\n<p>#####修改前代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;BottomSharePop <span class=\"keyword\">from</span>=&#123;<span class=\"string\">'detail'</span>&#125;</div><div class=\"line\">    handleBodyTouch=&#123;<span class=\"keyword\">this</span>.handleBodyTouch&#125;</div><div class=\"line\">    shareGoodsOptions=&#123;<span class=\"keyword\">this</span>.shareGoodsOptions&#125;</div><div class=\"line\">    businessType=&#123;<span class=\"keyword\">this</span>.goodsDetail.businessType&#125;</div><div class=\"line\">    shareData=&#123;<span class=\"keyword\">this</span>.props.detailShare&#125;/&gt;</div></pre></td></tr></table></figure></p>\n<p>#####review后代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;BottomSharePop</div><div class=\"line\">\t<span class=\"keyword\">from</span> = &#123;<span class=\"string\">'detail'</span>&#125;</div><div class=\"line\">\thandleBodyTouch = &#123;<span class=\"keyword\">this</span>.handleBodyTouch&#125;</div><div class=\"line\">\tshareGoodsOptions = &#123;<span class=\"keyword\">this</span>.shareGoodsOptions&#125;</div><div class=\"line\">\tbusinessType = &#123;<span class=\"keyword\">this</span>.goodsDetail.businessType&#125;</div><div class=\"line\">\tshareData = &#123;<span class=\"keyword\">this</span>.props.detailShare&#125; /&gt;</div></pre></td></tr></table></figure></p>\n<p>#####点评</p>\n<blockquote>\n<p> 组件引用所定义的属性应该单独另起一行，组件如果里边没有需要引用的代码就直接在最后边结束的地方以空格和斜线尖头结束，这样读代码看着也是很清晰的</p>\n</blockquote>\n"},{"title":"导购组 code review 0705","date":"2017-07-05T10:13:37.000Z","_content":"\n##导购组 code review\n***\n| 姓名        | Review对象           |  日期  |\n| ------------- |:-------------:| -----:|\n|   韩爱玲    |  李银帅 | 2017年7月5日 |\n\n#####修改前代码\n```javascript\nfunction mapStateToProps(state) {\n    return {\n        goodDetail:state.getShopDate.prod_info_detail,//商品详情数据\n        attr_data:state.getShopDate.attr_data,//多维规格数据\n        accessToken:state.getShopDate.accessToken,//token\n        province:state.getShopDate.province,//省份,\n        get_cart_Data:state.getShopDate.get_cart_Data,//购物车总数量\n        detailShare:state.getShopDate.detailShare,//分享数据\n        addressCost:state.getShopDate.addressCost\n    }\n}\nexport default connect(\n    mapStateToProps,\n    {\n        initDetailStore: actionCreators.initDetailStore,\n        queryProdInfo: actionCreators.queryProdInfo,\n        getAddressCost: actionCreators.getAddressCost,\n        getProvince: actionCreators.getProvince,//暂时不用\n        getDetailShare: actionCreators.queryDetailShare,\n        QueryAttrValue:actionCreators.GetAttrDetail,\n        GetAccessToken:actionCreators.GetAccessToken,\n        fetchCartData:actionCreators.fetchCartData,\n        AttrinitStore:actionCreators.AttrinitStore,\n    }\n)(Detail)\n```\n\n#####review后代码\n```javascript\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(exchangedAction, dispatch)\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Detail)\n```\n\n#####点评\n> Redux中的bindActionCreators，是通过dispatch将action包裹起来，这样可以通过bindActionCreators创建的方法，直接调用dispatch(action)(隐式调用）。一般情况下，我们可以通过Provider将store通过React的connext属性向下传递，bindActionCreators的唯一用处就是需要传递action creater到子组件，并且改子组件并没有接收到父组件上传递的store和dispatch\n\n","source":"_posts/codeReview/guide/2017-7/2017-7-5.md","raw":"---\ntitle: 导购组 code review 0705\ndate: 2017-07-05 18:13:37\ncategories:\n- codeReview\n---\n\n##导购组 code review\n***\n| 姓名        | Review对象           |  日期  |\n| ------------- |:-------------:| -----:|\n|   韩爱玲    |  李银帅 | 2017年7月5日 |\n\n#####修改前代码\n```javascript\nfunction mapStateToProps(state) {\n    return {\n        goodDetail:state.getShopDate.prod_info_detail,//商品详情数据\n        attr_data:state.getShopDate.attr_data,//多维规格数据\n        accessToken:state.getShopDate.accessToken,//token\n        province:state.getShopDate.province,//省份,\n        get_cart_Data:state.getShopDate.get_cart_Data,//购物车总数量\n        detailShare:state.getShopDate.detailShare,//分享数据\n        addressCost:state.getShopDate.addressCost\n    }\n}\nexport default connect(\n    mapStateToProps,\n    {\n        initDetailStore: actionCreators.initDetailStore,\n        queryProdInfo: actionCreators.queryProdInfo,\n        getAddressCost: actionCreators.getAddressCost,\n        getProvince: actionCreators.getProvince,//暂时不用\n        getDetailShare: actionCreators.queryDetailShare,\n        QueryAttrValue:actionCreators.GetAttrDetail,\n        GetAccessToken:actionCreators.GetAccessToken,\n        fetchCartData:actionCreators.fetchCartData,\n        AttrinitStore:actionCreators.AttrinitStore,\n    }\n)(Detail)\n```\n\n#####review后代码\n```javascript\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(exchangedAction, dispatch)\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Detail)\n```\n\n#####点评\n> Redux中的bindActionCreators，是通过dispatch将action包裹起来，这样可以通过bindActionCreators创建的方法，直接调用dispatch(action)(隐式调用）。一般情况下，我们可以通过Provider将store通过React的connext属性向下传递，bindActionCreators的唯一用处就是需要传递action creater到子组件，并且改子组件并没有接收到父组件上传递的store和dispatch\n\n","slug":"codeReview/guide/2017-7/2017-7-5","published":1,"updated":"2017-08-15T03:24:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6g39swr000qy2r71j17rtjx","content":"<p>##导购组 code review</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">Review对象</th>\n<th style=\"text-align:right\">日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>韩爱玲</td>\n<td style=\"text-align:center\">李银帅</td>\n<td style=\"text-align:right\">2017年7月5日</td>\n</tr>\n</tbody>\n</table>\n<p>#####修改前代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapStateToProps</span>(<span class=\"params\">state</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        goodDetail:state.getShopDate.prod_info_detail,<span class=\"comment\">//商品详情数据</span></div><div class=\"line\">        attr_data:state.getShopDate.attr_data,<span class=\"comment\">//多维规格数据</span></div><div class=\"line\">        accessToken:state.getShopDate.accessToken,<span class=\"comment\">//token</span></div><div class=\"line\">        province:state.getShopDate.province,<span class=\"comment\">//省份,</span></div><div class=\"line\">        get_cart_Data:state.getShopDate.get_cart_Data,<span class=\"comment\">//购物车总数量</span></div><div class=\"line\">        detailShare:state.getShopDate.detailShare,<span class=\"comment\">//分享数据</span></div><div class=\"line\">        addressCost:state.getShopDate.addressCost</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(</div><div class=\"line\">    mapStateToProps,</div><div class=\"line\">    &#123;</div><div class=\"line\">        initDetailStore: actionCreators.initDetailStore,</div><div class=\"line\">        queryProdInfo: actionCreators.queryProdInfo,</div><div class=\"line\">        getAddressCost: actionCreators.getAddressCost,</div><div class=\"line\">        getProvince: actionCreators.getProvince,<span class=\"comment\">//暂时不用</span></div><div class=\"line\">        getDetailShare: actionCreators.queryDetailShare,</div><div class=\"line\">        QueryAttrValue:actionCreators.GetAttrDetail,</div><div class=\"line\">        GetAccessToken:actionCreators.GetAccessToken,</div><div class=\"line\">        fetchCartData:actionCreators.fetchCartData,</div><div class=\"line\">        AttrinitStore:actionCreators.AttrinitStore,</div><div class=\"line\">    &#125;</div><div class=\"line\">)(Detail)</div></pre></td></tr></table></figure></p>\n<p>#####review后代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapDispatchToProps</span>(<span class=\"params\">dispatch</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        actions: bindActionCreators(exchangedAction, dispatch)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(</div><div class=\"line\">    mapStateToProps,</div><div class=\"line\">    mapDispatchToProps</div><div class=\"line\">)(Detail)</div></pre></td></tr></table></figure></p>\n<p>#####点评</p>\n<blockquote>\n<p>Redux中的bindActionCreators，是通过dispatch将action包裹起来，这样可以通过bindActionCreators创建的方法，直接调用dispatch(action)(隐式调用）。一般情况下，我们可以通过Provider将store通过React的connext属性向下传递，bindActionCreators的唯一用处就是需要传递action creater到子组件，并且改子组件并没有接收到父组件上传递的store和dispatch</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>##导购组 code review</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">Review对象</th>\n<th style=\"text-align:right\">日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>韩爱玲</td>\n<td style=\"text-align:center\">李银帅</td>\n<td style=\"text-align:right\">2017年7月5日</td>\n</tr>\n</tbody>\n</table>\n<p>#####修改前代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapStateToProps</span>(<span class=\"params\">state</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        goodDetail:state.getShopDate.prod_info_detail,<span class=\"comment\">//商品详情数据</span></div><div class=\"line\">        attr_data:state.getShopDate.attr_data,<span class=\"comment\">//多维规格数据</span></div><div class=\"line\">        accessToken:state.getShopDate.accessToken,<span class=\"comment\">//token</span></div><div class=\"line\">        province:state.getShopDate.province,<span class=\"comment\">//省份,</span></div><div class=\"line\">        get_cart_Data:state.getShopDate.get_cart_Data,<span class=\"comment\">//购物车总数量</span></div><div class=\"line\">        detailShare:state.getShopDate.detailShare,<span class=\"comment\">//分享数据</span></div><div class=\"line\">        addressCost:state.getShopDate.addressCost</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(</div><div class=\"line\">    mapStateToProps,</div><div class=\"line\">    &#123;</div><div class=\"line\">        initDetailStore: actionCreators.initDetailStore,</div><div class=\"line\">        queryProdInfo: actionCreators.queryProdInfo,</div><div class=\"line\">        getAddressCost: actionCreators.getAddressCost,</div><div class=\"line\">        getProvince: actionCreators.getProvince,<span class=\"comment\">//暂时不用</span></div><div class=\"line\">        getDetailShare: actionCreators.queryDetailShare,</div><div class=\"line\">        QueryAttrValue:actionCreators.GetAttrDetail,</div><div class=\"line\">        GetAccessToken:actionCreators.GetAccessToken,</div><div class=\"line\">        fetchCartData:actionCreators.fetchCartData,</div><div class=\"line\">        AttrinitStore:actionCreators.AttrinitStore,</div><div class=\"line\">    &#125;</div><div class=\"line\">)(Detail)</div></pre></td></tr></table></figure></p>\n<p>#####review后代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapDispatchToProps</span>(<span class=\"params\">dispatch</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        actions: bindActionCreators(exchangedAction, dispatch)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(</div><div class=\"line\">    mapStateToProps,</div><div class=\"line\">    mapDispatchToProps</div><div class=\"line\">)(Detail)</div></pre></td></tr></table></figure></p>\n<p>#####点评</p>\n<blockquote>\n<p>Redux中的bindActionCreators，是通过dispatch将action包裹起来，这样可以通过bindActionCreators创建的方法，直接调用dispatch(action)(隐式调用）。一般情况下，我们可以通过Provider将store通过React的connext属性向下传递，bindActionCreators的唯一用处就是需要传递action creater到子组件，并且改子组件并没有接收到父组件上传递的store和dispatch</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj6g39suv0002y2r719vjv0mb","category_id":"cj6g39sv70006y2r7vilc9r8q","_id":"cj6g39svk000by2r7wr0af3om"},{"post_id":"cj6g39sv00004y2r7pcrft74l","category_id":"cj6g39svj000ay2r770b7e96h","_id":"cj6g39svl000fy2r7m10sj6a1"},{"post_id":"cj6g39svd0007y2r7dp2mh1gc","category_id":"cj6g39svk000dy2r7h3xjlu2m","_id":"cj6g39svo000jy2r7pgkqsgo1"},{"post_id":"cj6g39svg0008y2r7ujilrs0h","category_id":"cj6g39svm000hy2r7j5z970dr","_id":"cj6g39svo000ky2r7bm35v2mz"},{"post_id":"cj6g39swm000oy2r7nrwnhzwd","category_id":"cj6g39svj000ay2r770b7e96h","_id":"cj6g39swp000py2r7z89n9cm9"},{"post_id":"cj6g39swr000qy2r71j17rtjx","category_id":"cj6g39svj000ay2r770b7e96h","_id":"cj6g39swt000ry2r7g18pjdda"}],"PostTag":[{"post_id":"cj6g39svd0007y2r7dp2mh1gc","tag_id":"cj6g39svi0009y2r7gxyx7frt","_id":"cj6g39svl000ey2r785j7exeu"},{"post_id":"cj6g39svg0008y2r7ujilrs0h","tag_id":"cj6g39svk000cy2r7ld8ktjve","_id":"cj6g39svo000ly2r7it4ta35m"},{"post_id":"cj6g39svg0008y2r7ujilrs0h","tag_id":"cj6g39svi0009y2r7gxyx7frt","_id":"cj6g39svp000my2r7vj3qztda"},{"post_id":"cj6g39svg0008y2r7ujilrs0h","tag_id":"cj6g39svn000iy2r742mhwmyh","_id":"cj6g39svp000ny2r7uvb9obsd"}],"Tag":[{"name":"RN技术","_id":"cj6g39svi0009y2r7gxyx7frt"},{"name":"react框架","_id":"cj6g39svk000cy2r7ld8ktjve"},{"name":"node技术","_id":"cj6g39svn000iy2r742mhwmyh"}]}}